{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","features/account/accountSlice.ts","app/store/configureStore.ts","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/home/HomePage.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","app/components/AppPagination.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetails.tsx","features/orders/Orders.tsx","app/components/AppCheckbox.tsx","app/components/AppTextInput.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","app/context/StoreContext.tsx","index.tsx"],"names":["PaginatedResponse","items","metaData","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","data","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","pagination","JSON","parse","console","log","error","status","errors","modelStateErrors","key","push","flat","toast","title","history","pathname","state","toString","Promise","reject","requests","url","params","get","then","body","post","delete","Basket","addItem","productId","quantity","deleteItem","agent","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","currencyFormat","price","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","createSlice","name","initialState","basket","reducers","setBasket","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","addMatcher","isAnyOf","actions","productsAdaptor","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","append","pageNumber","pageSize","orderBy","searchTerm","types","length","brands","fetchProductsAsync","catalog","dispatch","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","increment","decrement","reset","signInUser","thunkApi","userDto","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","removeItem","configureStore","reducer","counter","useAppDispatch","useDispatch","useAppSelector","useSelector","SignedInMenu","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","color","onClick","event","currentTarget","sx","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","component","Link","to","midLinks","path","rightLinks","navStyles","textDecoration","Header","handleToggleDarkMode","itemCount","reduce","sum","item","AppBar","position","Toolbar","display","justifyContent","alignItems","Box","Typography","variant","NavLink","exact","Switch","onChange","List","map","ListItem","toUpperCase","IconButton","size","Badge","badgeContent","ShoppingCart","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","style","width","maxHeight","p","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","FormControlLabel","control","Checkbox","indexOf","value","currentIndex","newCheckedItems","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","Radio","LoadingComponent","message","Backdrop","invisible","height","CircularProgress","top","AppPagination","onPageChange","currentPage","totalPages","totalCount","Pagination","count","page","e","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","gutterBottom","brand","type","CardActions","LoadingButton","loading","includes","ProductCardSkeleton","Grid","xs","Skeleton","animation","marginBottom","ProductList","products","container","spacing","ProductSearch","searchText","setSearchText","debouncedSearch","debounce","target","TextField","fullWidth","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","NotFound","Container","Divider","ProductDetails","useParams","selectById","productStatus","setButtonLoading","parseInt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","marginTop","AboutPage","validationErrors","setValidationErrors","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","ServerError","useHistory","useLocation","detail","BasketSummary","providedSubtotal","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","nameOfProduct","marginRight","Remove","Add","Delete","BasketPage","theme","createTheme","Login","useForm","mode","handleSubmit","formState","isSubmitting","isValid","ThemeProvider","maxWidth","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","disabled","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","from","location","OrderDetails","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","find","o","total","orderDate","split","AppCheckbox","field","useController","defaultValue","AppTextInput","fieldState","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","city","country","postCode","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","darkMode","setDarkMode","paletteType","palette","background","default","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StoreContext","createContext","StoreProvider","children","Provider","prevState","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"gbAOaA,EAAb,aAII,WAAYC,EAAUC,GAAqB,yBAH3CD,WAG0C,OAF1CC,cAE0C,EACtCC,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,KCLxBE,IAAMC,SAASC,QAAUC,QACzBH,IAAMC,SAASG,iBAAkB,EAEjC,IAAMC,EAAe,SAACC,GAAD,OAA6BA,EAASC,MAE3DP,IAAMQ,aAAaC,QAAQC,KAAI,SAAAC,GAAW,IAAD,EAC/BC,EAAK,UAAGC,GAAMC,WAAWC,QAAQC,YAA5B,aAAG,EAA+BJ,MAI7C,OAHIA,IACAD,EAAOM,QAAQC,cAAf,iBAAyCN,IAEtCD,KAIXX,IAAMQ,aAAaF,SAASI,IAA5B,iDAAgC,WAAMJ,GAAN,8GAMtBa,EAAab,EAASW,QAAT,cAEfX,EAASC,KAAO,IAAIX,EAAkBU,EAASC,KAAMa,KAAKC,MAAMF,IAChEG,QAAQC,IAAI,aAAcJ,GAC1BG,QAAQC,IAAI,uCAAwCjB,EAASC,OAVrC,kBAYrBD,GAZqB,2CAAhC,uDAaG,SAACkB,GACA,MAAyBA,EAAMlB,SAAvBC,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,OACd,OAAQA,GACJ,KAAK,IACD,GAAIlB,EAAKmB,OAAQ,CACb,IAAMC,EAA6B,GACnC,IAAK,IAAMC,KAAOrB,EAAKmB,OACfnB,EAAKmB,OAAOE,IACZD,EAAiBE,KAAKtB,EAAKmB,OAAOE,IAG1C,MAAMD,EAAiBG,OAE3BC,IAAMP,MAAMjB,EAAKyB,OACjB,MACJ,KAAK,IACDD,IAAMP,MAAMjB,EAAKyB,OACjB,MAEJ,KAAK,IACDC,GAAQJ,KAAK,CACTK,SAAU,gBACVC,MAAO,CAAEX,MAAOjB,KAEpBwB,IAAMP,MAAMjB,EAAKyB,OACjB,MAEJ,QACID,IAAMP,MAAN,yCAA8CC,EAAOW,aAG7D,OAAOC,QAAQC,OAAOd,EAAMlB,aAGhC,IAAMiC,EACG,SAACC,EAAaC,GAAd,OAA2CzC,IAAM0C,IAAIF,EAAK,CAAEC,WAAUE,KAAKtC,IAD9EkC,EAEI,SAACC,EAAaI,GAAd,OAA2B5C,IAAM6C,KAAKL,EAAKI,GAAMD,KAAKtC,IAF1DkC,EAIM,SAACC,GAAD,OAAiBxC,IAAM8C,OAAON,GAAKG,KAAKtC,IAgB9C0C,EAAS,CACXL,IAAK,kBAAMH,EAAa,WACxBS,QAAS,SAACC,GAAD,IAAoBC,EAApB,uDAAuC,EAAvC,OAA6CX,EAAA,2BAAkCU,EAAlC,qBAAwDC,GAAY,KAC1HC,WAAY,SAACF,GAAD,IAAoBC,EAApB,uDAAuC,EAAvC,OAA6CX,EAAA,2BAAoCU,EAApC,qBAA0DC,MA8BxGE,EATD,CACVC,QAvCY,CACZC,KAAM,SAACb,GAAD,OAA6BF,EAAa,WAAYE,IAC5Dc,QAAS,SAACC,GAAD,OAAgBjB,EAAA,mBAAyBiB,KAClDC,aAAc,kBAAMlB,EAAa,sBAqCjCmB,WAlCe,CACfC,YAAa,kBAAMpB,EAAa,sBAChCqB,YAAa,kBAAMrB,EAAa,oBAChCsB,YAAa,kBAAMtB,EAAa,oBAChCuB,YAAa,kBAAMvB,EAAa,uBAChCwB,mBAAoB,kBAAMxB,EAAa,4BA8BvCQ,SACAiB,QAtBY,CACZC,MAAO,SAACC,GAAD,OAAiB3B,EAAc,gBAAiB2B,IACvDC,SAAU,SAACD,GAAD,OAAiB3B,EAAc,mBAAoB2B,IAC7DE,YAAa,kBAAM7B,EAAa,wBAChC8B,aAAc,kBAAM9B,EAAa,0BAmBjC+B,OAhBW,CACXhB,KAAM,kBAAMf,EAAa,WACzBgC,MAAO,SAACf,GAAD,OAAgBjB,EAAA,iBAAuBiB,KAC9CgB,OAAQ,SAACjE,GAAD,OAAegC,EAAc,SAAUhC,KAc/CkE,SAVa,CACbC,oBAAqB,kBAAMnC,EAAc,WAAY,OCxGlD,SAASoC,EAAeC,GAC3B,MAAO,KAAOA,EAAM,KAAKC,QAAQ,GCGrC,IAKaC,EAAmBC,YAC5B,qBAD4C,iDAE5C,WAAOC,EAAGC,GAAV,oGAEqB7B,EAAML,OAAOL,MAFlC,iGAIeuC,EAASC,gBAAgB,CAAE1D,MAAO,KAAIjB,QAJrD,wDAF4C,wDAU5C,CACI4E,UAAW,WACP,ID1BL,SAAmBvD,GACtB,IAAMwD,EAAIC,SAASC,OAAOC,MAAM,YAAc3D,EAAM,oBACpD,OAAOwD,EAAIA,EAAEI,MAAQ,GCwBRC,CAAU,WAAY,OAAO,KAKjCC,EAAqBX,YAC9B,4BAD8C,iDAE9C,aAAoCE,GAApC,4FAAShC,EAAT,EAASA,UAAT,IAAoBC,gBAApB,MAA+B,EAA/B,oBAEqBE,EAAML,OAAOC,QAAQC,EAAWC,GAFrD,iGAIe+B,EAASC,gBAAgB,CAAE1D,MAAO,KAAMjB,QAJvD,yDAF8C,yDAWrCoF,EAAwBZ,YACjC,+BADiD,iDAEjD,aAAoCE,GAApC,4FAAShC,EAAT,EAASA,UAAT,IAAoBC,gBAApB,MAA+B,EAA/B,oBAEqBE,EAAML,OAAOI,WAAWF,EAAWC,GAFxD,iGAIe+B,EAASC,gBAAgB,CAAE1D,MAAO,KAAMjB,QAJvD,yDAFiD,yDAWxCqF,EAAcC,YAAY,CACnCC,KAAM,SACNC,aA9C8B,CAC9BC,OAAQ,KACRvE,OAAQ,QA6CRwE,SAAU,CACNC,UAAW,SAAC/D,EAAyBgE,GACjChE,EAAM6D,OAASG,EAAOC,SAE1BC,YAAa,SAAClE,GACVA,EAAM6D,OAAS,OAGvBM,cAAe,SAACC,GACZA,EAAQC,QAAQd,EAAmBe,SAAS,SAACtE,EAAOgE,GAChDhE,EAAMV,OAAS,iBAAmB0E,EAAOO,KAAKC,IAAI1D,aAGtDsD,EAAQC,QAAQb,EAAsBc,SAAS,SAACtE,EAAOgE,GACnDhE,EAAMV,OAAS,oBAAsB0E,EAAOO,KAAKC,IAAI1D,aAEzDsD,EAAQC,QAAQb,EAAsBiB,WAAW,SAACzE,EAAOgE,GAAY,IAAD,EAChE,EAAgCA,EAAOO,KAAKC,IAApC1D,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SACb2D,EAAS,UAAG1E,EAAM6D,cAAT,aAAG,EAAcnG,MAAMiH,WAAU,SAAAC,GAAC,OAAIA,EAAE9D,YAAcA,KAErE,IAAmB,IAAf4D,QAAkCG,IAAdH,EAAxB,CAKqD,IAAD,EAApD,GAFA1E,EAAM6D,OAAQnG,MAAMgH,GAAW3D,UAAYA,EAEM,IAA7Cf,EAAM6D,OAAQnG,MAAMgH,GAAY3D,SAChC,UAAAf,EAAM6D,cAAN,SAAcnG,MAAMoH,OAAOJ,EAAW,GAE1C1E,EAAMV,OAAS,WAEnB8E,EAAQC,QAAQb,EAAsBuB,UAAU,SAAC/E,EAAOgE,GACpD7E,QAAQC,IAAI4E,EAAOC,SACnBjE,EAAMV,OAAS,UAEnB8E,EAAQY,WAAWC,YAAQ1B,EAAmBkB,UAAW9B,EAAiB8B,YAAY,SAACzE,EAAOgE,GAC1FhE,EAAM6D,OAASG,EAAOC,QACtBjE,EAAMV,OAAS,UAEnB8E,EAAQY,WAAWC,YAAQ1B,EAAmBwB,SAAUpC,EAAiBoC,WAAW,SAAC/E,EAAOgE,GACxF7E,QAAQC,IAAI4E,EAAOC,SACnBjE,EAAMV,OAAS,aAMpB,EAAmCmE,EAAYyB,QAAvCnB,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,Y,QCvFpBiB,EAAkBC,cAExB,SAASC,EAAeC,GACpB,IAAMhF,EAAS,IAAIiF,gBAQnB,OAPAjF,EAAOkF,OAAO,aAAcF,EAAcG,WAAWxF,YACrDK,EAAOkF,OAAO,WAAYF,EAAcI,SAASzF,YACjDK,EAAOkF,OAAO,UAAWF,EAAcK,SACnCL,EAAcM,YAAYtF,EAAOkF,OAAO,aAAcF,EAAcM,YACpEN,EAAcO,MAAMC,OAAS,GAAGxF,EAAOkF,OAAO,QAASF,EAAcO,MAAM5F,YAC3EqF,EAAcS,OAAOD,OAAS,GAAGxF,EAAOkF,OAAO,SAAUF,EAAcS,OAAO9F,YAE3EK,EAGJ,IAAM0F,EAAqBpD,YAC9B,6BAD8C,iDAE9C,WAAOC,EAAGC,GAAV,0FACUxC,EAAS+E,EAAevC,EAASnE,WAAWsH,QAAQX,eAD9D,kBAG+BrE,EAAMC,QAAQC,KAAKb,GAHlD,cAGcnC,EAHd,OAIQgB,QAAQC,IAAI,WAAYjB,EAASR,UACjCmF,EAASoD,SAASC,GAAYhI,EAASR,WAL/C,kBAMeQ,EAAST,OANxB,2DAQeoF,EAASC,gBAAgB,CAAE1D,MAAO,KAAMjB,QARvD,0DAF8C,yDAerCgI,EAAoBxD,YAC7B,4BAD6C,iDAE7C,WAAO9B,EAAWgC,GAAlB,oGAEqB7B,EAAMC,QAAQE,QAAQN,GAF3C,iGAIegC,EAASC,gBAAgB,CAAE1D,MAAO,KAAMjB,QAJvD,wDAF6C,yDAWpCkD,EAAesB,YACxB,uBADwC,iDAExC,WAAOC,EAAGC,GAAV,6GAEe7B,EAAMC,QAAQI,gBAF7B,yDAIewB,EAASC,gBAAgB,CAAE1D,MAAO,KAAMjB,QAJvD,wDAFwC,yDAqBrC,IAAMiI,EAAe3C,YAAY,CACpCC,KAAM,UACNC,aAAcuB,EAAgBmB,gBAA8B,CACxDC,gBAAgB,EAChBC,eAAe,EACflH,OAAQ,OACRyG,OAAQ,GACRF,MAAO,GACPP,cAjBG,CACHG,WAAY,EACZC,SAAU,EACVC,QAAS,OACTI,OAAQ,GACRF,MAAO,IAaPlI,SAAU,OAEdmG,SAAU,CACN2C,iBAAkB,SAACzG,EAAYgE,GAE3BhE,EAAMuG,gBAAiB,EACvBvG,EAAMsF,cAAN,uCAA2BtF,EAAMsF,eAAkBtB,EAAOC,SAA1D,IAAmEwB,WAAY,KAGnFiB,cAAe,SAAC1G,EAAYgE,GACxBhE,EAAMuG,gBAAiB,EACvBvG,EAAMsF,cAAN,2BAA2BtF,EAAMsF,eAAkBtB,EAAOC,UAE9DkC,YAAa,SAACnG,EAAYgE,GACtBhE,EAAMrC,SAAWqG,EAAOC,SAE5B0C,mBAAoB,SAAC3G,GACjBA,EAAMsF,cAnCP,CACHG,WAAY,EACZC,SAAU,EACVC,QAAS,OACTI,OAAQ,GACRF,MAAO,MAiCX1B,cAAgB,SAAAC,GACZA,EAAQC,QAAQ2B,EAAmB1B,SAAS,SAACtE,GACzCA,EAAMV,OAAS,0BAEnB8E,EAAQC,QAAQ2B,EAAmBvB,WAAW,SAACzE,EAAOgE,GAClDmB,EAAgByB,OAAO5G,EAAOgE,EAAOC,SACrCjE,EAAMV,OAAS,OACfU,EAAMuG,gBAAiB,KAE3BnC,EAAQC,QAAQ2B,EAAmBjB,UAAU,SAAC/E,EAAOgE,GACjD7E,QAAQC,IAAI4E,EAAOC,SACnBjE,EAAMV,OAAS,UAEnB8E,EAAQC,QAAQ+B,EAAkB9B,SAAS,SAACtE,GACxCA,EAAMV,OAAS,yBAEnB8E,EAAQC,QAAQ+B,EAAkB3B,WAAW,SAACzE,EAAOgE,GACjDmB,EAAgB0B,UAAU7G,EAAOgE,EAAOC,SACxCjE,EAAMV,OAAS,UAEnB8E,EAAQC,QAAQ+B,EAAkBrB,UAAU,SAAC/E,EAAOgE,GAChD7E,QAAQC,IAAI4E,GACZhE,EAAMV,OAAS,UAEnB8E,EAAQC,QAAQ/C,EAAagD,SAAS,SAACtE,GACnCA,EAAMV,OAAS,yBAEnB8E,EAAQC,QAAQ/C,EAAamD,WAAW,SAACzE,EAAOgE,GAC5ChE,EAAM+F,OAAS/B,EAAOC,QAAQ8B,OAC9B/F,EAAM6F,MAAQ7B,EAAOC,QAAQ4B,MAC7B7F,EAAMwG,eAAgB,EACtBxG,EAAMV,OAAS,UAEnB8E,EAAQC,QAAQ/C,EAAayD,UAAU,SAAC/E,EAAOgE,GAC3C7E,QAAQC,IAAI4E,EAAOC,SACnBjE,EAAMV,OAAS,aAKdwH,EAAmB3B,EAAgB4B,cAAa,SAAC/G,GAAD,OAAsBA,EAAMiG,WAClF,EAA6EI,EAAanB,QAAlFuB,EAAR,EAAQA,iBAAsCN,IAA9C,EAA0BQ,mBAA1B,EAA8CR,aAAaO,GAA3D,EAA2DA,cCvIrDM,GAAetD,YAAY,CACpCC,KAAM,UACNC,aAP+B,CAC/BxF,KAAM,GACNyB,MAAO,mDAMPiE,SAAU,CACNmD,UAAW,SAACjH,EAAOgE,GACfhE,EAAM5B,MAAQ4F,EAAOC,SAEzBiD,UAAW,SAAClH,EAAOgE,GACfhE,EAAM5B,MAAQ4F,EAAOC,SAEzBkD,MAAO,SAACnH,EAAOgE,GACXhE,EAAM5B,KAAO,MAKlB,GAAsC4I,GAAa9B,QAA5C+B,GAAP,GAAOA,UAAWC,GAAlB,GAAkBA,UAAWC,GAA7B,GAA6BA,M,qCCVvBC,GAAaxE,YACtB,qBADsC,iDAEtC,WAAOxE,EAAMiJ,GAAb,8GAG8BpG,EAAMY,QAAQC,MAAM1D,GAHlD,cAGckJ,EAHd,OAMgBzD,EAAoByD,EAApBzD,OAAWhF,EAN3B,aAMoCyI,EANpC,IAOYzD,GACAwD,EAASnB,SAASnC,EAAUF,IAEhC0D,aAAaC,QAAQ,OAAQvI,KAAKwI,UAAU5I,IAVpD,kBAYeA,GAZf,2DAcewI,EAAStE,gBAAgB,CAAE1D,MAAO,KAAMjB,QAdvD,0DAFsC,yDAsB7BsJ,GAAmB9E,YAC5B,sBAD4C,iDAE5C,WAAOC,EAAGwE,GAAV,4FACIA,EAASnB,SAASyB,GAAQ1I,KAAKC,MAAMqI,aAAaK,QAAQ,WAD9D,kBAG8B3G,EAAMY,QAAQI,cAH5C,cAGcqF,EAHd,OAIgBzD,EAAoByD,EAApBzD,OAAWhF,EAJ3B,aAIoCyI,EAJpC,IAKYzD,GACAwD,EAASnB,SAASnC,EAAUF,IAEhC0D,aAAaC,QAAQ,OAAQvI,KAAKwI,UAAU5I,IARpD,kBASeA,GATf,2DAWewI,EAAStE,gBAAgB,CAAE1D,MAAO,KAAMjB,QAXvD,0DAF4C,wDAgB5C,CAGI4E,UAAW,WACP,IAAKuE,aAAaK,QAAQ,QAAS,OAAO,KAKzCC,GAAenE,YAAY,CACpCC,KAAM,UACNC,aArD+B,CAC/B/E,KAAM,MAqDNiF,SAAU,CACNgE,QAAS,SAAC9H,GACNb,QAAQC,IAAI,oBACZY,EAAMnB,KAAO,KACbM,QAAQC,IAAI,eAAgBY,EAAMnB,MAClC0I,aAAaQ,WAAW,QACxBjI,GAAQJ,KAAK,MAEjBiI,QAAS,SAAC3H,EAAYgE,GAClBhE,EAAMnB,KAAOmF,EAAOC,UAI5BE,cAAe,SAACC,GACZA,EAAQC,QAAQqD,GAAiB3C,UAAU,SAAC/E,GACxCA,EAAMnB,KAAO,KACb0I,aAAaQ,WAAW,QACxBnI,IAAMP,MAAM,wCACZS,GAAQJ,KAAK,QAEjB0E,EAAQY,WAAWC,YAAQmC,GAAW3C,UAAWiD,GAAiBjD,YAAY,SAACzE,EAAYgE,GACvFhE,EAAMnB,KAAOmF,EAAOC,WAExBG,EAAQY,WAAWC,YAAQmC,GAAWrC,SAAU2C,GAAiB3C,WAAW,SAAC/E,EAAYgE,GACrF,MAAMA,EAAOC,cAMlB,GAA6B4D,GAAa3C,QAAlC4C,GAAR,GAAQA,QAASH,GAAjB,GAAiBA,QC3FXjJ,GAAQsJ,YAAe,CAChCC,QAAS,CACLC,QAASlB,GAAaiB,QACtBpE,OAAQJ,EAAYwE,QACpBhC,QAASI,EAAa4B,QACtBrJ,QAASiJ,GAAaI,WAOjBE,GAAiB,kBAAMC,eACvBC,GAAkDC,I,gDCZhD,SAASC,KAEpB,IAAMrC,EAAWiC,KACTtJ,EAASwJ,IAAe,SAAArI,GAAK,OAAIA,EAAMpB,WAAvCC,KACR,EAAgC2J,IAAMC,SAA6B,MAAnE,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAOC,QAAQH,GAIfI,EAAc,WAChBH,EAAY,OAGhB,OACI,uCACI,eAACI,GAAA,EAAD,CACIC,MAAM,UACNC,QAXQ,SAACC,GACjBP,EAAYO,EAAMC,gBAWVC,GAAI,CAAEC,WAAY,MAHtB,gBAKKxK,QALL,IAKKA,OALL,EAKKA,EAAMyK,QAEX,gBAACC,GAAA,EAAD,CACIb,SAAUA,EACVE,KAAMA,EACNY,QAASV,EACTW,oBAAqBC,KAJzB,UAMI,eAACC,GAAA,EAAD,CAAUV,QAASH,EAAnB,qBACA,eAACa,GAAA,EAAD,CAAUC,UAAWC,IAAMC,GAAG,UAA9B,uBACA,eAACH,GAAA,EAAD,CAAUV,QAAS,WACf/C,EAAS4B,MACT5B,EAAShC,MAFb,0BCzBhB,IAAM6F,GAAW,CACb,CAAElK,MAAO,UAAWmK,KAAM,YAC1B,CAAEnK,MAAO,QAASmK,KAAM,UACxB,CAAEnK,MAAO,UAAWmK,KAAM,aAGxBC,GAAa,CACf,CAAEpK,MAAO,QAASmK,KAAM,UACxB,CAAEnK,MAAO,WAAYmK,KAAM,cAGzBE,GAAY,CACdlB,MAAO,UACPmB,eAAgB,OAChBd,WAAY,KACZ,UAAW,CACPL,MAAO,YAEX,WAAY,CACRA,MAAO,mBAIA,SAASoB,GAAT,GAAkD,IAAhCC,EAA+B,EAA/BA,qBAErBxG,EAAWwE,IAAe,SAAArI,GAAK,OAAIA,EAAM6D,UAAzCA,OACAhF,EAASwJ,IAAe,SAAArI,GAAK,OAAIA,EAAMpB,WAAvCC,KAEFyL,EAAS,OAAGzG,QAAH,IAAGA,OAAH,EAAGA,EAAQnG,MAAM6M,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAK1J,WAAU,GAE3E,OACI,eAAC2J,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,gBAACC,EAAA,EAAD,CAASxB,GAAI,CAAEyB,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAA7E,UACI,gBAACC,EAAA,EAAD,CAAKH,QAAQ,OAAOE,WAAW,SAA/B,UACI,eAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKtB,UAAWuB,IAASrB,GAAG,IAAIV,GAAIc,GAAWkB,OAAK,EAAxE,qBAGA,eAACC,EAAA,EAAD,CAAQrC,MAAM,UAAUsC,SAAUjB,OAKtC,eAACkB,EAAA,EAAD,CAAMnC,GAAI,CAAEyB,QAAS,QAArB,SACKd,GAASyB,KAAI,gBAAG3L,EAAH,EAAGA,MAAOmK,EAAV,EAAUA,KAAV,OACV,eAACyB,EAAA,EAAD,CACI7B,UAAWuB,IACXrB,GAAIE,EAEJZ,GAAIc,GAJR,SAMKrK,EAAM6L,eAHF1B,QAQjB,eAACgB,EAAA,EAAD,CAAKH,QAAQ,OAAOE,WAAW,SAA/B,SAEKlM,EACG,uCACI,eAAC8M,EAAA,EAAD,CAAYC,KAAK,QAAQxC,GAAI,CAAEJ,MAAO,WAAaY,UAAWC,IAAMC,GAAG,UAAvE,SACI,eAAC+B,EAAA,EAAD,CAAOC,aAAcxB,EAAWtB,MAAM,YAAtC,SACI,eAAC+C,EAAA,EAAD,QAGR,eAAIxD,GAAJ,OAGJ,eAACgD,EAAA,EAAD,CAAMnC,GAAI,CAAEyB,QAAS,QAArB,SACKZ,GAAWuB,KAAI,gBAAG3L,EAAH,EAAGA,MAAOmK,EAAV,EAAUA,KAAV,OACZ,eAACyB,EAAA,EAAD,CACI7B,UAAWuB,IACXrB,GAAIE,EAEJZ,GAAIc,GAJR,SAMKrK,EAAM6L,eAHF1B,e,iEClF1B,SAASgC,KAUpB,OACI,uCACI,gBAAC,KAAD,2BAVS,CACbC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,IAKZ,cACI,+BACI,sBAAKC,IAAI,oBAAoBC,IAAI,OAAOC,MAAO,CAAE3B,QAAS,QAAS4B,MAAO,OAAQC,UAAW,SAEjG,+BACI,sBAAKJ,IAAI,oBAAoBC,IAAI,OAAOC,MAAO,CAAE3B,QAAS,QAAS4B,MAAO,OAAQC,UAAW,SAEjG,+BACI,sBAAKJ,IAAI,oBAAoBC,IAAI,OAAOC,MAAO,CAAE3B,QAAS,QAAS4B,MAAO,OAAQC,UAAW,aAGrG,eAAC1B,EAAA,EAAD,CAAKH,QAAQ,OAAOC,eAAe,SAAS1B,GAAI,CAAEuD,EAAG,GAArD,SACI,eAAC1B,EAAA,EAAD,CAAYC,QAAQ,KAApB,0C,+DCjBD,SAAS0B,GAAT,GAA+D,IAApClP,EAAmC,EAAnCA,MAAO4N,EAA4B,EAA5BA,SAAUuB,EAAkB,EAAlBA,QAEvD,EAAwCpE,mBAASoE,GAAW,IAA5D,mBAAOC,EAAP,KAAqBC,EAArB,KAoBA,OACI,eAACC,GAAA,EAAD,UAGKtP,EAAM8N,KAAI,SAAAf,GACP,OAAO,eAACwC,GAAA,EAAD,CACHC,QACI,eAACC,GAAA,EAAD,CACIN,SAAyC,IAAhCC,EAAaM,QAAQ3C,GAC9BxB,QAAS,kBAzBjC,SAAuBoE,GACnBlO,QAAQC,IAAI,sBAAuBiO,GACnC,IAAMC,EAAeR,EAAanI,WAAU,SAAA8F,GAAI,OAAIA,IAAS4C,KAC7DlO,QAAQC,IAAI,eAAgBkO,GAC5B,IAAIC,EAA4B,GACPA,GAAH,IAAlBD,EAAoC,uBAAOR,GAAP,CAAqBO,IAEtCP,EAAaU,QAAO,SAAA/C,GAAI,OAAIA,IAAS4C,KAG5DlO,QAAQC,IAAI,kBAAmBmO,GAE/BR,EAAgBQ,GAChBjC,EAASiC,GAY0BE,CAAchD,MAErCiD,MAAOjD,GACFA,Q,kCCnCV,SAASkD,GAAT,GAAwE,IAA5CC,EAA2C,EAA3CA,QAAStC,EAAkC,EAAlCA,SAAUuC,EAAwB,EAAxBA,cAI1D,OACI,eAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CACIzC,SAAUA,EACV+B,MAAOQ,EAFX,SAIKD,EAAQpC,KAAI,YAAuB,IAApB6B,EAAmB,EAAnBA,MAAOK,EAAY,EAAZA,MACnB,OAAO,eAACT,GAAA,EAAD,CAAkBI,MAAOA,EAAOH,QAAS,eAACc,GAAA,EAAD,IAAWN,MAAOA,GAAYL,U,kCCZnF,SAASY,GAAT,GAA4D,IAAD,IAAhCC,eAAgC,MAAtB,aAAsB,EACtE,OACI,eAACC,GAAA,EAAD,CAAUvF,MAAM,EAAMwF,WAAW,EAAjC,SACI,gBAACpD,EAAA,EAAD,CAAKH,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAASsD,OAAO,QAAvE,UACI,eAACC,GAAA,EAAD,CAAkB1C,KAAM,IAAK5C,MAAM,cACnC,eAACiC,EAAA,EAAD,CAAYC,QAAQ,KAAK9B,GAAI,CAAC0B,eAAgB,SAAUH,SAAU,QAAS4D,IAAK,OAAhF,SACKL,SCJN,SAASM,GAAT,GAA2D,IAAlC7Q,EAAiC,EAAjCA,SAAU8Q,EAAuB,EAAvBA,aAEtCC,EAAkD/Q,EAAlD+Q,YAAaC,EAAqChR,EAArCgR,WAAYC,EAAyBjR,EAAzBiR,WAAYlJ,EAAa/H,EAAb+H,SAG7C,OAFAvG,QAAQC,IAAI,6BAA8BzB,GAErCA,EAOD,gBAACqN,EAAA,EAAD,CAAKH,QAAQ,OAAOC,eAAe,gBAAgBC,WAAW,SAA9D,UACI,gBAACE,EAAA,EAAD,0BACiByD,EAAc,GAAKhJ,EAAW,EAD/C,MACqDgJ,EAAchJ,EAAWkJ,EAAaA,EAAaF,EAAchJ,EADtH,OACoIkJ,EADpI,YAGA,eAACC,GAAA,EAAD,CACI7F,MAAM,YACN4C,KAAK,QACLkD,MAAOH,EACPI,KAAML,EACNpD,SAAU,SAAC0D,EAAGD,GAAJ,OAAaN,EAAaM,SAdxC,eAACd,GAAD,CAAkBC,QAAQ,wB,0ECHvB,SAASe,GAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,QAE5B5P,EAAW+I,IAAe,SAAArI,GAAK,OAAIA,EAAM6D,UAAzCvE,OACF4G,EAAWiC,KAIjB,OACE,gBAACgH,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACEC,OACE,eAACC,GAAA,EAAD,CAAQlG,GAAI,CAAEmG,QAAS,kBAAvB,SACGL,EAAQvL,KAAK6L,OAAO,GAAG9D,gBAG5B7L,MAAOqP,EAAQvL,KACf8L,qBAAsB,CACpBrG,GAAI,CAAEsG,WAAY,OAAQ1G,MAAO,qBAGrC,eAAC2G,GAAA,EAAD,CACEvG,GAAI,CAAEiF,OAAQ,IAAKuB,eAAgB,UAAWL,QAAS,iBACvDM,MAAOX,EAAQY,WACfjQ,MAAOqP,EAAQvL,OAEjB,gBAACoM,GAAA,EAAD,WACE,gBAAC9E,EAAA,EAAD,CAAY+E,cAAY,EAAChH,MAAM,YAAYkC,QAAQ,KAAnD,eACKgE,EAAQzM,MAAQ,KAAKC,QAAQ,MAElC,gBAACuI,EAAA,EAAD,CAAYC,QAAQ,QAAQlC,MAAM,iBAAlC,UACGkG,EAAQe,MADX,MACqBf,EAAQgB,WAG/B,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAeC,QAAS/Q,EAAOgR,SAAS,iBAAmBpB,EAAQ7N,IAAK4H,QAAS,kBAAM/C,EAAS3C,EAAmB,CAAEzC,UAAWoO,EAAQ7N,OAAQuK,KAAK,QAArJ,yBACA,eAAC7C,GAAA,EAAD,CAAQa,UAAWC,IAAMC,GAAE,mBAAcoF,EAAQ7N,IAAMuK,KAAK,QAA5D,wB,cCxCO,SAAS2E,KACpB,OACI,gBAACC,GAAA,EAAD,CAAM/F,MAAI,EAACgG,IAAE,EAAC7G,UAAWuF,KAAzB,UACI,eAACC,GAAA,EAAD,CACIC,OACI,eAACqB,GAAA,EAAD,CAAUC,UAAU,OAAOzF,QAAQ,WAAWuB,MAAO,GAAI4B,OAAQ,KAErExO,MACI,eAAC6Q,GAAA,EAAD,CACIC,UAAU,OACVtC,OAAQ,GACR5B,MAAM,MACND,MAAO,CAAEoE,aAAc,OAInC,eAACF,GAAA,EAAD,CAAUtH,GAAI,CAAEiF,OAAQ,KAAOsC,UAAU,OAAOzF,QAAQ,gBACxD,eAAC6E,GAAA,EAAD,UACI,uCACI,eAACW,GAAA,EAAD,CAAUC,UAAU,OAAOtC,OAAQ,GAAI7B,MAAO,CAAEoE,aAAc,KAC9D,eAACF,GAAA,EAAD,CAAUC,UAAU,OAAOtC,OAAQ,GAAI5B,MAAM,aAGrD,eAAC0D,GAAA,EAAD,UACI,uCACI,eAACO,GAAA,EAAD,CAAUC,UAAU,OAAOtC,OAAQ,GAAI5B,MAAM,QAC7C,eAACiE,GAAA,EAAD,CAAUC,UAAU,OAAOtC,OAAQ,GAAI5B,MAAM,gBCzBlD,SAASoE,GAAT,GAA2C,IAApBC,EAAmB,EAAnBA,SAE1BvK,EAAmB8B,IAAe,SAAArI,GAAK,OAAIA,EAAMiG,WAAjDM,eAER,OACI,eAACiK,GAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAzB,SACKF,EAAStF,KAAI,SAAA0D,GAAO,OACjB,eAACsB,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAf,SACMlK,EAGE,eAAC0I,GAAD,CAAaC,QAASA,IAFtB,eAACqB,GAAD,KAFerB,EAAQ7N,S,uBCZhC,SAAS4P,KAEpB,IAAQ3L,EAAkB+C,IAAe,SAAArI,GAAK,OAAIA,EAAMiG,WAAhDX,cACFY,EAAWiC,KAEjB,EAAoCM,mBAASnD,EAAcM,YAA3D,mBAAOsL,EAAP,KAAmBC,EAAnB,KAGMC,EAAkBC,cAAS,SAACnI,GAC9BhD,EAASO,EAAiB,CAAEb,WAAYsD,EAAMoI,OAAOjE,WACtD,KAIH,OACI,eAACkE,GAAA,EAAD,CACI7D,MAAM,kBACNxC,QAAQ,WACRsG,WAAS,EACTnE,MAAO6D,GAAc,GACrB5F,SAAU,SAACpC,GACPiI,EAAcjI,EAAMoI,OAAOjE,OAC3B+D,EAAgBlI,MCZhC,IAAMuI,GAAc,CAClB,CAAEpE,MAAO,OAAQK,MAAO,gBACxB,CAAEL,MAAO,YAAaK,MAAO,uBAC7B,CAAEL,MAAO,QAASK,MAAO,wBAKZ,SAASxM,KAEtB,IAAM4P,EAAWzI,GAAevB,EAAiB4K,WACjD,EAAkFrJ,IAAe,SAAArI,GAAK,OAAIA,EAAMiG,WAAxGM,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,cAAeT,EAAvC,EAAuCA,OAAQF,EAA/C,EAA+CA,MAAOP,EAAtD,EAAsDA,cAAe3H,EAArE,EAAqEA,SAC/DuI,EAAWiC,KAajB,OAVAwJ,qBAAU,WACHpL,GAAgBL,EAASF,OAE7B,CAACO,EAAgBL,IAEpByL,qBAAU,WACHnL,GAAeN,EAAS5E,OAE5B,CAACkF,EAAeN,IAEdM,GAMLrH,QAAQC,IAAI,sBAAuBzB,GAGjC,gBAAC6S,GAAA,EAAD,CAAMO,WAAS,EAACa,cAAe,EAA/B,UACE,gBAACpB,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAf,UACE,eAACoB,GAAA,EAAD,CAAOzI,GAAI,CAAE0I,GAAI,GAAjB,SACE,eAACb,GAAD,MAEF,eAACY,GAAA,EAAD,CAAOzI,GAAI,CAAE0I,GAAI,EAAGnF,EAAG,GAAvB,SACE,eAACgB,GAAD,CACEE,cAAevI,EAAcK,QAC7B2F,SAAU,SAAC0D,GAAD,OAAO9I,EAASO,EAAiB,CAAEd,QAASqJ,EAAEsC,OAAOjE,UAC/DO,QAAS6D,OAGb,eAACI,GAAA,EAAD,CAAOzI,GAAI,CAAE0I,GAAI,EAAGnF,EAAG,GAAvB,SACE,eAACC,GAAD,CACElP,MAAOqI,EACP8G,QAASvH,EAAcS,OACvBuF,SAAU,SAAC5N,GAAD,OAAqBwI,EAASO,EAAiB,CAAEV,OAAQrI,UAGvE,eAACmU,GAAA,EAAD,CAAOzI,GAAI,CAAE0I,GAAI,EAAGnF,EAAG,GAAvB,SACE,eAACC,GAAD,CACElP,MAAOmI,EACPgH,QAASvH,EAAcO,MACvByF,SAAU,SAAC5N,GAAD,OAAqBwI,EAASO,EAAiB,CAAEZ,MAAOnI,aAIxE,eAAC8S,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAf,SACE,eAACI,GAAD,CAAaC,SAAUA,MAEzB,eAACN,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,IACf,eAACD,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAGrH,GAAI,CAAE0I,GAAI,GAA5B,SACGnU,GACC,eAAC6Q,GAAD,CACEC,aAAc,SAACM,GAAD,OAAkB7I,EAASQ,GAAc,CAAEjB,WAAYsJ,MACrEpR,SAAUA,UA1ChB,eAACsQ,GAAD,CAAkBC,QAAQ,wB,gECtCjB,SAAS6D,KAEpB,OACI,gBAACC,GAAA,EAAD,CAAWpI,UAAWiI,KAAOzI,GAAI,CAACiF,OAAO,KAAzC,UACI,eAACpD,EAAA,EAAD,CAAY+E,cAAY,EAAC9E,QAAQ,KAAjC,oEAGA,eAAC+G,GAAA,EAAD,IACA,eAAClJ,GAAA,EAAD,CAAQyI,WAAS,EAAC5H,UAAWC,IAAMC,GAAG,WAAtC,kCCAG,SAASoI,KAEpB,IAAQ5S,EAAW+I,IAAe,SAAArI,GAAK,OAAIA,EAAM6D,UAAzCvE,OACA+B,EAAO8Q,cAAP9Q,GACF6N,EAAU7G,IAAe,SAAArI,GAAK,OAAI8G,EAAiBsL,WAAWpS,EAAOqB,MAC3DgR,EAAkBhK,IAAe,SAAArI,GAAK,OAAIA,EAAMiG,WAAxD3G,OACR,EAA0CmJ,oBAAS,GAAnD,mBAAsB6J,GAAtB,WAIMpM,EAAWiC,KAYjB,OAJAwJ,qBAAU,WACDzC,GAAShJ,EAASE,EAAkBmM,SAASlR,OACnD,CAACA,EAAI6E,EAAUgJ,IAEdmD,EAAc/B,SAAS,WAAmB,eAACrC,GAAD,CAAkBC,QAAQ,uBAEnEgB,EAGD,gBAACsB,GAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAzB,UACI,eAACR,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAf,SACI,sBAAKnE,IAAK4C,EAAQY,WAAYvD,IAAK2C,EAAQvL,KAAM6I,MAAO,CAAEC,MAAO,YAErE,gBAAC+D,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAf,UACI,eAACxF,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BgE,EAAQvL,OAClC,eAACsO,GAAA,EAAD,CAAS7I,GAAI,CAAE0I,GAAI,KACnB,gBAAC7G,EAAA,EAAD,CAAYC,QAAQ,KAAKlC,MAAM,YAA/B,eAA8CkG,EAAQzM,MAAQ,KAAKC,QAAQ,MAC3E,eAAC8P,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,UAAY1D,EAAQvL,UAExB,gBAACgP,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,0BACA,eAACA,GAAA,EAAD,UAAY1D,EAAQ2D,iBAExB,gBAACF,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,UAAY1D,EAAQe,WAExB,gBAAC0C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,UAAY1D,EAAQgB,UAExB,gBAACyC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,uBACA,eAACA,GAAA,EAAD,UAAY1D,EAAQ4D,4BAMpC,eAAC1C,GAAA,EAAD,CACIC,QAAS/Q,EAAOgR,SAAS,WACzBpF,QAAQ,YACRU,KAAK,QACLxC,GAAI,CAAE2J,UAAW,GACjB9J,QAAS,kBAvDFnI,EAuDsByR,SAASlR,GAtDlDiR,GAAiB,QAEjBpM,EAAS3C,EAAmB,CAAEzC,YAAWC,SAAU,KAHvD,IAAuBD,GAkDX,+BAtCS,eAACiR,GAAD,I,4CChCV,SAASiB,KAEpB,MAAgDvK,mBAAmB,IAAnE,mBAAOwK,EAAP,KAAyBC,EAAzB,KAcA,OACI,gBAAClB,GAAA,EAAD,WACI,eAAC/G,EAAA,EAAD,CAAY+E,cAAY,EAAC9E,QAAQ,KAAjC,yCAGA,gBAACiI,GAAA,EAAD,CAAa3B,WAAS,EAAtB,UACI,eAACzI,GAAA,EAAD,CAAQmC,QAAQ,YAAYjC,QAAS,kBAAMhI,EAAMM,WAAWC,cAAc4R,OAAM,SAAA/T,GAAK,OAAIF,QAAQC,IAAIC,OAArG,4BACA,eAAC0J,GAAA,EAAD,CAAQmC,QAAQ,YAAYjC,QAAS,kBAAMhI,EAAMM,WAAWE,cAAc2R,OAAM,SAAA/T,GAAK,OAAIF,QAAQC,IAAIC,OAArG,4BACA,eAAC0J,GAAA,EAAD,CAAQmC,QAAQ,YAAYjC,QAAS,kBAAMhI,EAAMM,WAAWG,cAAc0R,OAAM,SAAA/T,GAAK,OAAIF,QAAQC,IAAIC,OAArG,4BACA,eAAC0J,GAAA,EAAD,CAAQmC,QAAQ,YAAYjC,QAAS,kBAAMhI,EAAMM,WAAWI,cAAcyR,OAAM,SAAA/T,GAAK,OAAIF,QAAQC,IAAIC,OAArG,4BACA,eAAC0J,GAAA,EAAD,CAAQmC,QAAQ,YAAYjC,QAtBxC,WACIhI,EAAMM,WAAWK,qBACZpB,MAAK,kBAAMrB,QAAQC,IAAI,+BACvBgU,OAAM,SAAC/T,GACJ6T,EAAoB7T,OAkBpB,sCAEH4T,EAAiBnN,OAAS,GACvB,gBAACuN,GAAA,EAAD,CAAOC,SAAS,QAAhB,UACI,eAACC,GAAA,EAAD,gCACA,eAAChI,EAAA,EAAD,UACK0H,EAAiBzH,KAAI,SAACnM,GACnB,OAAQ,eAACoM,EAAA,EAAD,UACJ,eAAC+H,GAAA,EAAD,UACKnU,KAFcA,cChCpC,SAASoU,KAEpB,IAAMvN,EAAWiC,KAEjB,EAAsBE,IAAe,SAAArI,GAAK,OAAIA,EAAMkI,WAA7C9J,EAAP,EAAOA,KAAMyB,EAAb,EAAaA,MAEb,OACI,uCACI,eAACoL,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACKrL,IAEL,gBAACoL,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BACkB9M,KAElB,gBAAC+U,GAAA,EAAD,WACI,eAACpK,GAAA,EAAD,CAAQE,QAAS,kBAAM/C,EAASe,GAAU,KAAKiE,QAAQ,YAAYlC,MAAM,UAAzE,sBACA,eAACD,GAAA,EAAD,CAAQE,QAAS,kBAAM/C,EAASgB,GAAU,KAAKgE,QAAQ,YAAYlC,MAAM,QAAzE,sBACA,eAACD,GAAA,EAAD,CAAQE,QAAS,kBAAM/C,EAASiB,GAAM,KAAK+D,QAAQ,YAAYlC,MAAM,YAArE,yB,OCnBD,SAAS0K,KAEpB,IAAM5T,EAAU6T,cACT3T,EAAS4T,cAAT5T,MAEP,OACI,gBAACgS,GAAA,EAAD,CAAWpI,UAAWiI,KAAtB,UACU,OAAL7R,QAAK,IAALA,KAAOX,MACJ,uCACA,eAAC4L,EAAA,EAAD,CAAYC,QAAQ,KAAKlC,MAAM,QAAQgH,cAAY,EAAnD,SAAqDhQ,EAAMX,MAAMQ,QAC7D,eAACoS,GAAA,EAAD,IACJ,eAAChH,EAAA,EAAD,UAAajL,EAAMX,MAAMwU,QAAU,6BAGnC,eAAC5I,EAAA,EAAD,CAAYC,QAAQ,KAAK8E,cAAY,EAArC,6BAEJ,eAACjH,GAAA,EAAD,CAAQE,QAAS,kBAAMnJ,EAAQJ,KAAK,aAApC,gCCTG,SAASoU,GAAT,GAAqD,IAA5BC,EAA2B,EAA3BA,iBAE5BlQ,EAAWwE,IAAe,SAAArI,GAAK,OAAIA,EAAM6D,UAAzCA,OAuBR,IAAMmQ,EApBGnQ,OACoBgB,IAArBkP,EACwB,OAAGlQ,QAAH,IAAGA,OAAH,EAAGA,EAAQnG,MAAM6M,QAAO,SAACC,EAAKC,GAClD,OAAOD,EAAOC,EAAKhI,MAAQgI,EAAK1J,WACjC,GAIAgT,EARa,EAqBlBE,EAAmCD,EAR3B,KAAO,IACN,EAEA,IAOf,OACI,qCACI,eAACxB,GAAA,EAAD,CAAgB5I,UAAWiI,KAAO3G,QAAS,WAA3C,SACI,eAACuH,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWsB,QAAS,EAApB,sBACA,eAACtB,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SAA0B3R,EAAewR,QAE7C,gBAACrB,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWsB,QAAS,EAApB,2BACA,eAACtB,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SAA0B3R,EAAeyR,QAE7C,gBAACtB,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWsB,QAAS,EAApB,mBACA,eAACtB,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SAA0B3R,EAAewR,EAAWC,QAExD,eAACtB,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UACI,uBAAMpG,MAAO,CAAE4H,UAAW,UAA1B,sE,4CC5CjB,SAASC,GAAT,GAAyD,IAAlC3W,EAAiC,EAAjCA,MAAiC,IAA1B4W,gBAA0B,SAE3DhV,EAAW+I,IAAe,SAAArI,GAAK,OAAIA,EAAM6D,UAAzCvE,OACF4G,EAAWiC,KAEjB,OACI,eAACqK,GAAA,EAAD,CAAgB5I,UAAWiI,KAA3B,SACI,gBAACY,GAAA,EAAD,CAAOrJ,GAAI,CAAEmL,SAAU,KAAO,aAAW,eAAzC,UACI,eAACC,GAAA,EAAD,UACI,gBAAC7B,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,CAAWuB,MAAM,QAAjB,mBACA,eAACvB,GAAA,EAAD,CAAWuB,MAAM,SAAjB,sBACA,eAACvB,GAAA,EAAD,CAAWuB,MAAM,QAAjB,sBACCG,GAAY,qCAAE,eAAC1B,GAAA,EAAD,CAAWuB,MAAM,iBAIxC,eAACzB,GAAA,EAAD,iBACKhV,QADL,IACKA,OADL,EACKA,EAAO8N,KAAI,SAACf,GAAD,OACR,gBAACkI,GAAA,EAAD,CAEIvJ,GAAI,CAAE,mCAAoC,CAAEqL,OAAQ,IAFxD,UAII,eAAC7B,GAAA,EAAD,CAAWhJ,UAAU,KAAK8K,MAAM,MAAhC,SACI,gBAAC1J,EAAA,EAAD,CAAKH,QAAQ,OAAOE,WAAW,SAA/B,UACI,sBAAKuB,IAAK7B,EAAKqF,WAAYvD,IAAK9B,EAAKkK,cAAenI,MAAO,CAAE6B,OAAQ,GAAIuG,YAAa,MACtF,gCAAOnK,EAAKkK,qBAGpB,eAAC/B,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SAA0B3R,EAAeiI,EAAKhI,SAC9C,gBAACmQ,GAAA,EAAD,CAAWuB,MAAM,SAAjB,UACKG,GAAY,uCAAE,eAAClE,GAAA,EAAD,CACXpH,MAAM,QACNqH,QAAS/Q,EAAOgR,SAAS,oBAAsB7F,EAAK3J,WACpDmI,QAAS,kBAAM/C,EAAS1C,EAAsB,CAAE1C,UAAW2J,EAAK3J,UAAWC,SAAU,MAH1E,SAIX,eAAC8T,GAAA,EAAD,MAJS,OAMZpK,EAAK1J,SACLuT,GAAY,uCAAE,eAAClE,GAAA,EAAD,CACXpH,MAAM,YACNqH,QAAS/Q,EAAOgR,SAAS,iBAAmB7F,EAAK3J,WACjDmI,QAAS,kBAAM/C,EAAS3C,EAAmB,CAAEzC,UAAW2J,EAAK3J,UAAWC,SAAU,MAHvE,SAIX,eAAC+T,GAAA,EAAD,MAJS,UAOjB,eAAClC,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SAA0B3R,EAAgBiI,EAAKhI,MAAQgI,EAAK1J,YAC3DuT,GAAY,eAAC1B,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SACT,eAAC/D,GAAA,EAAD,CACIpH,MAAM,UACNqH,QAAS/Q,EAAOgR,SAAS,oBAAsB7F,EAAK3J,WACpDmI,QAAS,kBAAM/C,EAAS1C,EAAsB,CAAE1C,UAAW2J,EAAK3J,UAAWC,SAAU0J,EAAK1J,aAH9F,SAII,eAACgU,GAAA,EAAD,UA/BHtK,EAAK3J,qBC1BvB,SAASkU,KAEpB,IAAQnR,EAAWwE,IAAe,SAAArI,GAAK,OAAIA,EAAM6D,UAAzCA,OAMR,OAAKA,EAED,uCACI,eAACwQ,GAAD,CAAa3W,MAAOmG,EAAOnG,QAC3B,gBAAC8S,GAAA,EAAD,CAAMO,WAAS,EAAf,UACI,eAACP,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,IACf,gBAACD,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAf,UACI,eAACqD,GAAD,IACA,eAAC/K,GAAA,EAAD,CACIyI,WAAS,EACT5F,KAAK,QACLV,QAAQ,YACRtB,UAAWC,IACXC,GAAG,YALP,+BARI,eAACmB,EAAA,EAAD,CAAYC,QAAQ,KAApB,kC,kCCDlB+J,GAAQC,eAEC,SAASC,KAAS,IAAD,IAEtBrV,EAAU6T,cAEVzN,GADW0N,cACAzL,MAEjB,EAAiFiN,aAAQ,CACrFC,KAAM,QADFrT,EAAR,EAAQA,SAAUsT,EAAlB,EAAkBA,aAAlB,IAAgCC,UAAaC,EAA7C,EAA6CA,aAAcjW,EAA3D,EAA2DA,OAAQkW,EAAnE,EAAmEA,QANvC,sDAU5B,WAA0BrX,GAA1B,oGAEc8H,EAASkB,GAAWhJ,IAFlC,OAIQ0B,EAAQJ,KAAK,YAJrB,+CAMQP,QAAQC,IAAR,MANR,yDAV4B,sBAqB5B,OACI,eAACsW,GAAA,EAAD,CAAeT,MAAOA,GAAtB,SACI,gBAACjD,GAAA,EAAD,CAAWpI,UAAU,OAAO+L,SAAS,KAArC,UAGI,eAACrG,GAAA,EAAD,CAAQlG,GAAI,CAAEwM,EAAG,EAAGrG,QAAS,kBAA7B,SACI,eAAC,KAAD,MAEJ,eAACtE,EAAA,EAAD,CAAYrB,UAAU,KAAKsB,QAAQ,KAAnC,qBAGA,gBAACF,EAAA,EAAD,CAAKpB,UAAU,OAAOiM,SAAUP,GAhChB,8CAgC0CQ,YAAU,EAAC1M,GAAI,CAAE2M,GAAI,GAA/E,UACI,eAACxE,GAAA,EAAD,yBACIyE,OAAO,SACPxE,WAAS,EACT9D,MAAM,WACNuI,WAAS,GACLjU,EAAS,WAAY,CAAEkU,SAAU,0BALzC,IAMI7W,QAASE,EAAO4W,SAChBC,WAAU,OAAE7W,QAAF,IAAEA,GAAF,UAAEA,EAAQ4W,gBAAV,aAAE,EAAkBjI,WAElC,eAACqD,GAAA,EAAD,yBACIyE,OAAO,SACPxE,WAAS,EACT9D,MAAM,WACNwC,KAAK,YACDlO,EAAS,WAAY,CAAEkU,SAAU,0BALzC,IAMI7W,QAASE,EAAO8W,SAChBD,WAAU,OAAE7W,QAAF,IAAEA,GAAF,UAAEA,EAAQ8W,gBAAV,aAAE,EAAkBnI,WAElC,eAACjB,GAAA,EAAD,CACIC,QAAS,eAACC,GAAA,EAAD,CAAUE,MAAM,WAAWrE,MAAM,YAC1C0E,MAAM,gBAEV,eAAC0C,GAAA,EAAD,CACIC,QAASmF,EACTtF,KAAK,SACLsB,WAAS,EACTtG,QAAQ,YACR9B,GAAI,CAAE2M,GAAI,EAAGjE,GAAI,GACjBwE,UAAWb,EANf,qBAUA,eAACjF,GAAA,EAAD,CAAMO,WAAS,EAAf,SACI,eAACP,GAAA,EAAD,CAAM/F,MAAI,EAAV,SACI,eAAC,IAAD,CAAMX,GAAG,YAAT,SACK,+CCnEjC,IAAMmL,GAAQC,eAEC,SAASqB,KAAY,IAAD,MAEzBzW,EAAU6T,cAGhB,EAA2FyB,aAAQ,CAC/FC,KAAM,QADFrT,EAAR,EAAQA,SAAUsT,EAAlB,EAAkBA,aAAckB,EAAhC,EAAgCA,SAAhC,IAA0CjB,UAAaC,EAAvD,EAAuDA,aAAcjW,EAArE,EAAqEA,OAAQkW,EAA7E,EAA6EA,QAsB7E,OACI,eAACC,GAAA,EAAD,CAAeT,MAAOA,GAAtB,SACI,gBAACjD,GAAA,EAAD,CAAWpI,UAAU,OAAO+L,SAAS,KAArC,UAGI,eAACrG,GAAA,EAAD,CAAQlG,GAAI,CAAEwM,EAAG,EAAGrG,QAAS,kBAA7B,SACI,eAAC,KAAD,MAEJ,eAACtE,EAAA,EAAD,CAAYrB,UAAU,KAAKsB,QAAQ,KAAnC,sBAGA,gBAACF,EAAA,EAAD,CACIpB,UAAU,OACViM,SAAUP,GAAa,SAAClX,GACpB6C,EAAMY,QAAQG,SAAS5D,GAClBoC,MAAK,WACFZ,IAAM6W,QAAQ,+CACd3W,EAAQJ,KAAK,aAEhB0T,OAAM,SAAA/T,GAAK,OArCpC,SAAyBE,GACrBJ,QAAQC,IAAIG,GAERA,GACAA,EAAOmX,SAAQ,SAACrX,GACRA,EAAMiR,SAAS,YACfkG,EAAS,WAAY,CAAEtI,QAAS7O,IACzBA,EAAMiR,SAAS,SACtBkG,EAAS,QAAS,CAAEtI,QAAS7O,IACtBA,EAAMiR,SAAS,aACtBkG,EAAS,WAAY,CAAEtI,QAAS7O,OA2BRsX,CAAgBtX,SAExCyW,YAAU,EAAC1M,GAAI,CAAE2M,GAAI,GAVzB,UAYI,eAACxE,GAAA,EAAD,yBACIyE,OAAO,SACPxE,WAAS,EACT9D,MAAM,WACNuI,WAAS,GACLjU,EAAS,WAAY,CAAEkU,SAAU,0BALzC,IAMI7W,QAASE,EAAO4W,SAChBC,WAAU,OAAE7W,QAAF,IAAEA,GAAF,UAAEA,EAAQ4W,gBAAV,aAAE,EAAkBjI,WAElC,eAACqD,GAAA,EAAD,yBACIyE,OAAO,SACPxE,WAAS,EACT9D,MAAM,SACF1L,EAAS,QAAS,CAClBkU,SAAU,oBACVU,QAAS,CACLvJ,MAAO,mCACPa,QAAS,gCARrB,IAWI7O,QAASE,EAAO+J,MAChB8M,WAAU,OAAE7W,QAAF,IAAEA,GAAF,UAAEA,EAAQ+J,aAAV,aAAE,EAAe4E,WAE/B,eAACqD,GAAA,EAAD,yBACIyE,OAAO,SACPxE,WAAS,EACT9D,MAAM,WACNwC,KAAK,YACDlO,EAAS,WAAY,CACrBkU,SAAU,uBACVU,QAAS,CACLvJ,MAAO,wGACPa,QAAS,qDATrB,IAYI7O,QAASE,EAAO8W,SAChBD,WAAU,OAAE7W,QAAF,IAAEA,GAAF,UAAEA,EAAQ8W,gBAAV,aAAE,EAAkBnI,WAElC,eAACjB,GAAA,EAAD,CACIC,QAAS,eAACC,GAAA,EAAD,CAAUE,MAAM,WAAWrE,MAAM,YAC1C0E,MAAM,gBAIV,eAAC0C,GAAA,EAAD,CACIC,QAASmF,EACTtF,KAAK,SACLsB,WAAS,EACTtG,QAAQ,YACR9B,GAAI,CAAE2M,GAAI,EAAGjE,GAAI,GACjBwE,UAAWb,EANf,sBAUA,eAACjF,GAAA,EAAD,CAAMO,WAAS,EAAf,SACI,eAACP,GAAA,EAAD,CAAM/F,MAAI,EAAV,SACI,eAAC,IAAD,CAAMX,GAAG,SAAT,SACK,iD,qBCpHlB,SAAS+M,GAAT,GAAiE,IAA9BC,EAA6B,EAAxClN,UAAyBmN,EAAe,mBACnElY,EAASwJ,IAAe,SAAArI,GAAK,OAAIA,EAAMpB,WAAvCC,KACR,OACI,eAAC,IAAD,2BACQkY,GADR,IAEIC,OAAQ,SAACC,GAAD,OACJpY,EACI,eAACiY,EAAD,eAAeG,IAEf,eAAC,IAAD,CACInN,GAAI,CACA/J,SAAU,SACVC,MAAO,CAAEkX,KAAMD,EAAME,iBCZlC,SAASC,GAAT,GAA2D,IAAD,EAAlCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,iBAEpCtD,EAAQ,UAAGqD,EAAME,WAAWhN,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAOC,EAAK1J,SAAW0J,EAAKhI,QAAQ,UAA9E,QAAoF,EAElG,OACI,uCACI,gBAACuI,EAAA,EAAD,WACI,gBAACC,EAAA,EAAD,CAAY7B,GAAI,CAAEuD,EAAG,GAAKqD,cAAY,EAAC9E,QAAQ,KAA/C,oBAA4DmM,EAAMhW,GAAlE,MAAyEgW,EAAMG,eAC/E,eAACzO,GAAA,EAAD,CAAQE,QAAS,kBAAMqO,EAAiB,IAAIlO,GAAI,CAAEwM,EAAG,GAAKhK,KAAK,QAAQV,QAAQ,YAA/E,+BAEJ,eAACmJ,GAAD,CAAa3W,MAAO2Z,EAAME,WAA4BjD,UAAU,IAChE,gBAAC9D,GAAA,EAAD,CAAMO,WAAS,EAAf,UACI,eAACP,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,IACf,eAACD,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAf,SACI,eAACqD,GAAD,CAAeC,iBAAkBC,YCjBtC,SAAS7R,KAEpB,MAA4BsG,mBAAyB,MAArD,mBAAOgP,EAAP,KAAeC,EAAf,KACA,EAA8BjP,oBAAS,GAAvC,mBAAO4H,EAAP,KAAgBsH,EAAhB,KACA,EAAsDlP,mBAAS,GAA/D,mBAAOmP,EAAP,KAA4BC,EAA5B,KASA,OAPAlG,qBAAU,WACN1Q,EAAMkB,OAAOhB,OACRX,MAAK,SAAAiX,GAAM,OAAIC,EAAUD,MACzBrE,OAAM,SAAA/T,GAAK,OAAIF,QAAQC,IAAIC,MAC3ByY,SAAQ,kBAAMH,GAAW,QAC/B,IAECtH,EAAgB,eAACpC,GAAD,CAAkBC,QAAQ,wBAE1C0J,EAAsB,EAElB,eAACR,GAAD,CACIC,MAAK,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAQM,MAAK,SAAAC,GAAC,OAAIA,EAAE3W,KAAOuW,KAClCN,iBAAkBO,IAQ1B,eAACrF,GAAA,EAAD,CAAgB5I,UAAWiI,KAA3B,SACI,gBAACY,GAAA,EAAD,CAAOrJ,GAAI,CAAEmL,SAAU,KAAO,aAAW,eAAzC,UACI,eAACC,GAAA,EAAD,UACI,gBAAC7B,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,2BACA,eAACA,GAAA,EAAD,CAAWuB,MAAM,QAAjB,mBACA,eAACvB,GAAA,EAAD,CAAWuB,MAAM,QAAjB,wBACA,eAACvB,GAAA,EAAD,CAAWuB,MAAM,QAAjB,0BACA,eAACvB,GAAA,EAAD,CAAWuB,MAAM,eAGzB,eAACzB,GAAA,EAAD,iBACK+E,QADL,IACKA,OADL,EACKA,EAAQjM,KAAI,SAAC6L,GAAD,OACT,gBAAC1E,GAAA,EAAD,CAEIvJ,GAAI,CAAE,mCAAoC,CAAEqL,OAAQ,IAFxD,UAII,eAAC7B,GAAA,EAAD,CAAWhJ,UAAU,KAAK8K,MAAM,MAAhC,SACK2C,EAAMhW,KAEX,eAACuR,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SAA0B3R,EAAe6U,EAAMY,SAC/C,eAACrF,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SAA0BkD,EAAMa,UAAUC,MAAM,KAAK,KACrD,eAACvF,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SAA0BkD,EAAMG,cAChC,eAAC5E,GAAA,EAAD,CAAWuB,MAAM,QAAjB,SACI,eAACpL,GAAA,EAAD,CAAQE,QAAS,kBAAM4O,EAAuBR,EAAMhW,KAApD,sBAVCgW,EAAMhW,c,6DCvCxB,SAAS+W,GAAYnB,GAEhC,IAAQoB,EAAUC,aAAc,2BAAKrB,GAAN,IAAasB,cAAc,KAAlDF,MAER,OACI,eAACpL,GAAA,EAAD,CACIC,QACI,eAACC,GAAA,EAAD,2BACQkL,GADR,IAEIxL,QAASwL,EAAMhL,MACfrE,MAAM,YACNsN,SAAUW,EAAMX,YAGxB5I,MAAOuJ,EAAMvJ,QCjBV,SAAS8K,GAAavB,GAAe,IAAD,EAE/C,EAA8BqB,aAAc,2BAAKrB,GAAN,IAAasB,aAAc,MAA9DE,EAAR,EAAQA,WAAYJ,EAApB,EAAoBA,MAEpB,OACI,eAAC9G,GAAA,EAAD,uCACQ0F,GACAoB,GAFR,IAGI7G,WAAS,EACTtG,QAAQ,WACR7L,QAASoZ,EAAWpZ,MACpB+W,WAAU,UAAEqC,EAAWpZ,aAAb,aAAE,EAAkB6O,WCb3B,SAASwK,KAEpB,MAA+BC,eAAvBzL,EAAR,EAAQA,QAASqI,EAAjB,EAAiBA,UAEjB,OACI,uCACI,eAACtK,EAAA,EAAD,CAAYC,QAAQ,KAAK8E,cAAY,EAArC,8BAIA,gBAACQ,GAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAzB,UACI,eAACR,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAImI,GAAI,GAAvB,SACI,eAACJ,GAAD,CACItL,QAASA,EACTvJ,KAAK,WACL+J,MAAM,gBAGd,eAAC8C,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAImI,GAAI,IAEvB,eAACpI,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAf,SACI,eAAC+H,GAAD,CACItL,QAASA,EACTvJ,KAAK,WACL+J,MAAM,qBAGd,eAAC8C,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAf,SACI,eAAC+H,GAAD,CACItL,QAASA,EACTvJ,KAAK,WACL+J,MAAM,qBAGd,eAAC8C,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAImI,GAAI,EAAvB,SACI,eAACJ,GAAD,CACItL,QAASA,EACTvJ,KAAK,OACL+J,MAAM,WAGd,eAAC8C,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAImI,GAAI,EAAvB,SACI,eAACJ,GAAD,CACItL,QAASA,EACTvJ,KAAK,QACL+J,MAAM,YAGd,eAAC8C,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAImI,GAAI,EAAvB,SACI,eAACJ,GAAD,CACItL,QAASA,EACTvJ,KAAK,WACL+J,MAAM,kBAGd,eAAC8C,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAImI,GAAI,EAAvB,SACI,eAACJ,GAAD,CACItL,QAASA,EACTvJ,KAAK,UACL+J,MAAM,cAGd,eAAC8C,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAf,SACI,eAAC2H,GAAD,CACIzU,KAAK,cACL+J,MAAM,mCACNR,QAASA,EACToJ,UAAWf,EAAUsD,kB,qBClEhCC,GAAcC,sBAAW,WAAgEC,GAAoB,IAAlDlC,EAAiD,EAA5DlN,UAAyBqN,EAAmC,mBAC/GgC,EAAaC,mBAMnB,OAJAC,8BAAoBH,GAAK,iBAAO,CAC5BI,MAAO,kBAAMH,EAAWI,QAAQD,WAIhC,eAACtC,EAAD,aACIwC,QAAS,SAACC,GAAD,OAAkBN,EAAWI,QAAUE,IAC5CtC,OCHD,SAASuC,GAAT,GAA+D,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,kBAErCxM,EAAYyL,eAAZzL,QAGR,OACI,uCACI,eAACjC,EAAA,EAAD,CAAYC,QAAQ,KAAK8E,cAAY,EAArC,4BAGA,gBAACQ,GAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAzB,UACI,eAACR,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAIkJ,GAAI,EAAvB,SACI,eAACnB,GAAD,CAAc7U,KAAK,aAAa+J,MAAM,eAAeR,QAASA,MAElE,eAACsD,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAIkJ,GAAI,EAAvB,SACI,eAACpI,GAAA,EAAD,CACIjG,SAAUoO,EACVra,QAASoa,EAAUG,aAAaC,WAChCzD,WAAYqD,EAAUG,aAAaC,WACnCxY,GAAG,aACHqM,MAAM,cACN8D,WAAS,EACTsI,aAAa,YACb5O,QAAQ,WACR6O,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,eAAgBpB,GAChBqB,WAAY,CACRvQ,UAAWwQ,2BAK3B,eAAC5J,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAIkJ,GAAI,EAAvB,SACI,eAACpI,GAAA,EAAD,CACIjG,SAAUoO,EACVra,QAASoa,EAAUG,aAAaS,WAChCjE,WAAYqD,EAAUG,aAAaS,WACnChZ,GAAG,UACHqM,MAAM,cACN8D,WAAS,EACTsI,aAAa,SACb5O,QAAQ,WACR6O,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,eAAgBpB,GAChBqB,WAAY,CACRvQ,UAAW0Q,2BAK3B,eAAC9J,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,GAAIkJ,GAAI,EAAvB,SACI,eAACpI,GAAA,EAAD,CACIjG,SAAUoO,EACVra,QAASoa,EAAUG,aAAaW,QAChCnE,WAAYqD,EAAUG,aAAaW,QACnClZ,GAAG,MACHqM,MAAM,MACN8D,WAAS,EACTsI,aAAa,SACb5O,QAAQ,WACR6O,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACRC,eAAgBpB,GAChBqB,WAAY,CACRvQ,UAAW4Q,8BCzE5B,SAASC,KACpB,IAAQ5W,EAAWwE,IAAe,SAAArI,GAAK,OAAIA,EAAM6D,UAAzCA,OACFnG,EAAK,OAAGmG,QAAH,IAAGA,OAAH,EAAGA,EAAQnG,MAEtB,OADAyB,QAAQC,IAAIyE,GAER,uCACI,eAACoH,EAAA,EAAD,CAAYC,QAAQ,KAAK8E,cAAY,EAArC,2BAGCnM,GACG,qCACI,eAACwQ,GAAD,CAAa3W,MAAOA,EAAO4W,UAAU,MAE7C,gBAAC9D,GAAA,EAAD,CAAMO,WAAS,EAAf,UACI,eAACP,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,IACf,eAACD,GAAA,EAAD,CAAM/F,MAAI,EAACgG,GAAI,EAAf,SACI,eAACqD,GAAD,Y,uBCpBP4G,GAAmB,CAC5BC,KAAW,CACPC,SAAUD,OAAazE,SAAS,yBAChC2E,SAAUF,OAAazE,SAAS,8BAEhC4E,KAAMH,OAAazE,WACnBlW,MAAO2a,OAAazE,SAAS,qBAC7B6E,QAASJ,OAAazE,SAAS,uBAC/B8E,SAAUL,OAAazE,SAAS,6BAGpCyE,OACAA,KAAW,CACPM,WAAYN,OAAazE,c,gCCE3BgF,GAAQ,CAAC,mBAAoB,oBAAqB,mBAIzC,SAASC,KAEpB,MAAoC1S,mBAAS,GAA7C,mBAAO2S,EAAP,KAAmBC,EAAnB,KACA,EAAsC5S,mBAAS,GAA/C,mBAAO6S,EAAP,KAAoBC,EAApB,KACA,EAA8B9S,oBAAS,GAAvC,mBAAO4H,EAAP,KAAgBsH,EAAhB,KACMzR,EAAWiC,KACjB,EAAkCM,mBAAoE,CAAEmR,aAAc,KAAtH,mBAAOH,EAAP,KAAkB+B,EAAlB,KACA,EAAwC/S,mBAAc,CAAEoR,YAAY,EAAOQ,YAAY,EAAOE,SAAS,IAAvG,mBAAOkB,EAAP,KAAqBC,EAArB,KACA,EAA4CjT,mBAAS,IAArD,mBAAOkT,EAAP,KAAuBC,EAAvB,KACA,EAAgDnT,oBAAS,GAAzD,mBAAOoT,EAAP,KAAyBC,EAAzB,KACQjY,EAAWwE,IAAe,SAAArI,GAAK,OAAIA,EAAM6D,UAAzCA,OACFkY,EAASC,uBACTC,EAAWC,yBAEjB,SAASxC,EAAkBxQ,GAAa,IAAD,EACnCsS,EAAa,2BACN/B,GADK,IAERG,aAAa,2BACNH,EAAUG,cADL,mBAEP1Q,EAAMiT,YAFC,UAEajT,EAAM7J,aAFnB,aAEa,EAAa6O,aAI1CwN,EAAgB,2BACTD,GADQ,mBAEVvS,EAAMiT,YAAcjT,EAAMkT,YAiBnC,IAAMC,EAA0B3B,GAAiBU,GAE3CkB,EAAUlH,aAAQ,CACpBC,KAAM,MACNkH,SAAUC,aAAYH,KA9CS,SA0DpBI,EA1DoB,wFA0DnC,WAA2Bre,GAA3B,kGACIuZ,GAAW,GACHsD,EAAgD7c,EAAhD6c,WAAYyB,EAAoCte,EAApCse,YAAgBC,EAFxC,aAE4Dve,EAF5D,IAGS2d,GAAWE,EAHpB,iEAKcW,EAAcX,EAASY,WAAWzC,sBALhD,SAMoC2B,EAAOe,mBAAP,OAA0BjZ,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQkZ,aAAe,CACzEC,eAAgB,CACZC,KAAML,EACNM,gBAAiB,CACbvZ,KAAMsX,MAV1B,UAMckC,EANd,OAcQhe,QAAQC,IAAI+d,GACgC,eAAxC,UAAAA,EAAcC,qBAAd,eAA6B9d,QAfzC,kCAgBsC2B,EAAMkB,OAAOE,OAAO,CAAEqa,cAAaC,oBAhBzE,QAgBkBrB,EAhBlB,OAiBYC,EAAeD,GACfQ,GAAoB,GACpBF,EAAkB,6CAClBP,EAAcD,EAAa,GAC3BlV,EAAShC,KACTyT,GAAW,GAtBvB,wBAwBYiE,EAAiB,UAACuB,EAAc9d,aAAf,aAAC,EAAqB6O,SACvC4N,GAAoB,GACpBnE,GAAW,GACX0D,EAAcD,EAAa,GA3BvC,0DA8BQjc,QAAQC,IAAR,MACAuY,GAAW,GA/BnB,2DA1DmC,sBAiDnChG,qBAAU,WACN1Q,EAAMY,QAAQK,eACT1B,MAAK,SAAArC,GACEA,GACAme,EAAQnV,MAAR,uCAAmBmV,EAAQe,aAAgBlf,GAA3C,IAAqDue,aAAa,UAG/E,CAACJ,IAqCJ,IAAMgB,EAAU,iDAAG,WAAOlf,GAAP,8EACXgd,IAAeF,GAAMpV,OAAS,EADnB,gCAEL2W,EAAYre,GAFP,6BAKXid,EAAcD,EAAa,GALhB,2CAAH,sDASVmC,EAAa,WACflC,EAAcD,EAAa,IAiB/B,OACI,eAAC,KAAD,2BAAkBkB,GAAlB,aACI,gBAACzK,GAAA,EAAD,CAAO3G,QAAQ,WAAW9B,GAAI,CAAEoU,GAAI,CAAE/M,GAAI,EAAGkJ,GAAI,GAAKhN,EAAG,CAAE8D,GAAI,EAAGkJ,GAAI,IAAtE,UACI,eAAC1O,EAAA,EAAD,CAAYrB,UAAU,KAAKsB,QAAQ,KAAKiJ,MAAM,SAA9C,sBAGA,eAACsJ,GAAA,EAAD,CAASrC,WAAYA,EAAYhS,GAAI,CAAEsU,GAAI,EAAGC,GAAI,GAAlD,SACKzC,GAAM1P,KAAI,SAACkC,GAAD,OACP,eAACkQ,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UAAYnQ,KADLA,QAKnB,qCACK0N,IAAeF,GAAMpV,OAClB,uCACI,eAACmF,EAAA,EAAD,CAAYC,QAAQ,KAAK8E,cAAY,EAArC,SACK2L,IAEJE,EACG,gBAAC5Q,EAAA,EAAD,CAAYC,QAAQ,YAApB,mCAC2BoQ,EAD3B,oKAMA,eAACvS,GAAA,EAAD,CAAQmC,QAAQ,YAAYjC,QAASsU,EAArC,yCAOR,wBAAM1H,SAAUyG,EAAQhH,aAAagI,GAArC,UA5HpB,SAAwBQ,GACpB,OAAQA,GACJ,KAAK,EACD,OAAO,eAACpF,GAAD,IACX,KAAK,EACD,OAAO,eAAC+B,GAAD,IACX,KAAK,EACD,OAAO,eAACjB,GAAD,CAAaC,UAAWA,EAAWC,kBAAmBA,IACjE,QACI,MAAM,IAAIqE,MAAM,iBAoHHC,CAAe5C,GAChB,gBAACpQ,EAAA,EAAD,CAAK5B,GAAI,CAAEyB,QAAS,OAAQC,eAAgB,YAA5C,UACoB,IAAfsQ,GACG,eAACrS,GAAA,EAAD,CAAQE,QAASsU,EAAYnU,GAAI,CAAE2M,GAAI,EAAGkI,GAAI,GAA9C,kBAIJ,eAAC7N,GAAA,EAAD,CACIC,QAASA,EACTnF,QAAQ,YACRgF,KAAK,SACL9G,GAAI,CAAE2M,GAAI,EAAGkI,GAAI,GACjB3H,SA3DxB8E,IAAeF,GAAMpV,OAAS,KAEtB2V,EAAalB,UACbkB,EAAapB,aACboB,EAAa5B,cAGbyC,EAAQ/G,UAAUE,QA+CN,SAOK2F,IAAeF,GAAMpV,OAAS,EAAI,cAAgB,uBCpLvF,IAAMoY,GAAgBC,aAAW,+GAElB,SAASC,KAEpB,IAAMlY,EAAWiC,KACjB,EAA8BM,oBAAS,GAAvC,mBAAO4H,EAAP,KAAgBsH,EAAhB,KAWA,OATAhG,qBAAU,WACN1Q,EAAMqB,SAASC,sBACV/B,MAAK,SAAAqD,GAAM,OAAIqC,EAASnC,EAAUF,OAClCuP,OAAM,SAAA/T,GAAK,OAAIF,QAAQC,IAAIC,MAC3ByY,SAAQ,kBAAMH,GAAW,QAG/B,CAACzR,IAEAmK,EAAgB,eAACpC,GAAD,CAAkBC,QAAQ,yBAG1C,eAAC,YAAD,CAAU6N,OAAQmC,GAAlB,SACI,eAAC/C,GAAD,MCkEGkD,OAhEf,WAEE,IAAMnY,EAAWiC,KACjB,EAA8BM,oBAAS,GAAvC,mBAAO4H,EAAP,KAAgBsH,EAAhB,KAEM2G,EAAUC,sBAAW,gCAAC,iHAElBrY,EAASwB,MAFS,uBAGlBxB,EAASvD,KAHS,uDAKxBxD,QAAQC,IAAR,MALwB,yDAOzB,CAAC8G,IAEJyL,qBAAU,WACR2M,IAAU9d,MAAK,kBAAMmX,GAAW,QAC/B,CAAC2G,IAEJ,MAAgC7V,oBAAS,GAAzC,mBAAO+V,EAAP,KAAiBC,EAAjB,KACMC,EAAcF,EAAW,OAAS,QAKlCvJ,EAAQC,aAAY,CACxByJ,QAAS,CACPtJ,KAAMqJ,EACNE,WAAY,CACVC,QAAyB,UAAhBH,EAA0B,UAAY,cAKrD,OAAIrO,EAAgB,eAACpC,GAAD,CAAkBC,QAAQ,mBAI5C,gBAACwH,GAAA,EAAD,CAAeT,MAAOA,EAAtB,UACE,eAAC,IAAD,CAAgBtK,SAAS,eAAemU,iBAAe,IACvD,eAACC,GAAA,EAAD,IACA,eAAC3U,GAAD,CAAQC,qBApBiB,WAC3BoU,GAAaD,MAoBX,eAAC,IAAD,CAAOxU,KAAK,IAAIoB,OAAK,EAACxB,UAAWoC,KACjC,eAAC,IAAD,CAAOhC,KAAM,QAASgN,OAAQ,kBAC5B,eAAChF,GAAA,EAAD,CAAW5I,GAAI,CAAE2M,GAAI,GAArB,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAO/L,KAAK,WAAWoB,OAAK,EAACxB,UAAW1I,KACxC,eAAC,IAAD,CAAO8I,KAAK,eAAeJ,UAAWsI,KACtC,eAAC,IAAD,CAAOlI,KAAK,SAASJ,UAAWoJ,KAChC,eAAC,IAAD,CAAOhJ,KAAK,WAAWJ,UAAW6J,KAClC,eAAC,IAAD,CAAOzJ,KAAK,gBAAgBJ,UAAW8J,KACvC,eAAC,IAAD,CAAO1J,KAAK,UAAUJ,UAAWoL,KACjC,eAAC6B,GAAD,CAAc7M,KAAK,YAAYJ,UAAWwU,KAC1C,eAACvH,GAAD,CAAc7M,KAAK,UAAUJ,UAAWzH,KACxC,eAAC,IAAD,CAAO6H,KAAK,SAASJ,UAAWuL,KAChC,eAAC,IAAD,CAAOnL,KAAK,YAAYJ,UAAW2M,KACnC,eAAC,IAAD,CAAO3M,UAAWmI,iBCxEfiN,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1e,MAAK,YAAkD,IAA/C2e,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCCDO,GAAeC,6BAA6C5a,GAYlE,SAAS6a,GAAT,GAA2D,IAAnCC,EAAkC,EAAlCA,SAE3B,EAA4BlX,mBAAwB,MAApD,mBAAO5E,EAAP,KAAeE,EAAf,KAqBA,OACI,eAACyb,GAAaI,SAAd,CAAuBvS,MAAO,CAACxJ,SAAQE,YAAWgE,WApBtD,SAAoBjH,EAAmBC,GACnC,GAAK8C,EAAL,CAEA,IAAMnG,EAAK,aAAMmG,EAAOnG,OAClBgH,EAAYhH,EAAMiH,WAAU,SAAAC,GAAC,OAAIA,EAAE9D,YAAcA,KAEnD4D,GAAa,IACbhH,EAAMgH,GAAW3D,UAAYA,EAEzBrD,EAAMgH,GAAW3D,UAAY,GAC7BrD,EAAMoH,OAAOJ,EAAW,GAG5BX,GAAU,SAAA8b,GACN,OAAO,2BAAIA,GAAX,IAAuBniB,iBAM/B,SACKiiB,I,kBCjCA7f,GAAUggB,eAGvBC,IAAS/I,OACP,eAAC,IAAMgJ,WAAP,UACE,eAAC,IAAD,CAAQlgB,QAASA,GAAjB,SACE,eAAC4f,GAAD,UACE,eAAC,IAAD,CAAUhhB,MAAOA,GAAjB,SACE,eAAC,GAAD,YAKRwE,SAAS+c,eAAe,SAM1BjB,O","file":"static/js/main.3032c667.chunk.js","sourcesContent":["export interface MetaData {\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    totalCount: number;\n}\n\nexport class PaginatedResponse<T> {\n    items: T;\n    metaData: MetaData;\n\n    constructor(items: T, metaData: MetaData) {\n        this.items = items;\n        this.metaData = metaData;\n    }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { PaginatedResponse } from \"../models/pagination\";\nimport { store } from \"../store/configureStore\";\n\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 1000))\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response: AxiosResponse) => response.data\n\naxios.interceptors.request.use(config => {\n    const token = store.getState().account.user?.token\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n})\n\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') {\n        await sleep();\n    }\n\n\n    const pagination = response.headers['pagination']\n    if (pagination) {\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination))\n        console.log('pagination', pagination)\n        console.log('response data after pagination check', response.data)\n    }\n    return response\n}, (error: AxiosError) => {\n    const { data, status } = error.response!\n    switch (status) {\n        case 400:\n            if (data.errors) {\n                const modelStateErrors: string[] = []\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modelStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modelStateErrors.flat();\n            }\n            toast.error(data.title)\n            break;\n        case 401:\n            toast.error(data.title)\n            break;\n\n        case 500:\n            history.push({\n                pathname: '/server-error',\n                state: { error: data }\n            })\n            toast.error(data.title)\n            break;\n\n        default:\n            toast.error(`An unspecified error occurred: ${status.toString()}`)\n            break;\n    }\n    return Promise.reject(error.response)\n})\n\nconst requests = {\n    get: (url: string, params?: URLSearchParams) => axios.get(url, { params }).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody)\n}\nconst Catalog = {\n    list: (params: URLSearchParams) => requests.get('products', params),\n    details: (id: number) => requests.get(`products/${id}`),\n    fetchFilters: () => requests.get('products/filters')\n}\n\nconst TestErrors = {\n    get400Error: () => requests.get('buggy/bad-request'),\n    get401Error: () => requests.get('buggy/not-found'),\n    get404Error: () => requests.get('buggy/not-found'),\n    get500Error: () => requests.get('buggy/server-error'),\n    getValidationError: () => requests.get('buggy/validation-error')\n}\n\nconst Basket = {\n    get: () => requests.get('basket'),\n    addItem: (productId: number, quantity: number = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\n    deleteItem: (productId: number, quantity: number = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\n}\n\nconst Account = {\n    login: (values: any) => requests.post('account/login', values),\n    register: (values: any) => requests.post('account/register', values),\n    currentUser: () => requests.get('account/currentUser'),\n    fetchAddress: () => requests.get('account/savedAddress')\n}\n\nconst Orders = {\n    list: () => requests.get('orders'),\n    fetch: (id: number) => requests.get(`orders/${id}`),\n    create: (data: any) => requests.post('orders', data)\n\n}\n\nconst Payments = {\n    createPaymentIntent: () => requests.post('payments', {})\n}\n\nconst agent = {\n    Catalog,\n    TestErrors,\n    Basket,\n    Account,\n    Orders,\n    Payments\n}\n\nexport default agent;","\nexport function getCookie(key: string) {\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n    return b ? b.pop() : \"\";\n  }\n\nexport function currencyFormat(price: number) {\n    return '$' + (price/100).toFixed(2)\n}\n\n","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { Basket } from \"../../app/models/baskets\";\nimport { getCookie } from \"../../app/util/util\";\n\ninterface BasketState {\n    basket: Basket | null;\n    status: string;\n}\n\nconst initialState: BasketState = {\n    basket: null,\n    status: 'idle'\n}\n\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\n    'basket/fetchBasket',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Basket.get()\n        } catch (err: any) {\n            return thunkAPI.rejectWithValue({ error: err.data })\n\n        }\n    },\n    {\n        condition: () => {\n            if (!getCookie('buyerId')) return false\n        }\n    }\n)\n\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\n    'basket/addBasketItemAsync',\n    async ({ productId, quantity = 1 }, thunkAPI) => {\n        try {\n            return await agent.Basket.addItem(productId, quantity)\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const removeBasketItemAsync = createAsyncThunk<void, { productId: number, quantity?: number }>(\n    'basket/removeBasketItemAsync',\n    async ({ productId, quantity = 1 }, thunkAPI) => {\n        try {\n            return await agent.Basket.deleteItem(productId, quantity)\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState,\n    reducers: {\n        setBasket: (state: { basket: any; }, action: { payload: any; }) => {\n            state.basket = action.payload\n        },\n        clearBasket: (state: any) => {\n            state.basket = null\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\n\n        });\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId\n        });\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n            const { productId, quantity } = action.meta.arg\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId)\n\n            if (itemIndex === -1 || itemIndex === undefined) return;\n\n\n            state.basket!.items[itemIndex].quantity -= quantity!\n\n            if (state.basket!.items[itemIndex!].quantity === 0) {\n                state.basket?.items.splice(itemIndex, 1)\n            }\n            state.status = 'idle'\n        });\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\n            console.log(action.payload)\n            state.status = 'idle'\n        })\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\n            state.basket = action.payload\n            state.status = 'idle'\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\n            console.log(action.payload)\n            state.status = 'idle'\n        });\n    }\n\n})\n\nexport const { setBasket, clearBasket } = basketSlice.actions","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { MetaData } from \"../../app/models/pagination\";\nimport { Product, ProductParams } from \"../../app/models/product\";\nimport { RootState } from \"../../app/store/configureStore\";\n\ninterface CatalogState {\n    productsLoaded: boolean;\n    filtersLoaded: boolean;\n    status: string;\n    brands: string[];\n    types: string[];\n    productParams: ProductParams;\n    metaData: MetaData | null;\n}\n\nconst productsAdaptor = createEntityAdapter<Product>()\n\nfunction getAxiosParams(productParams: ProductParams) {\n    const params = new URLSearchParams();\n    params.append('pageNumber', productParams.pageNumber.toString());\n    params.append('pageSize', productParams.pageSize.toString());\n    params.append('orderBy', productParams.orderBy);\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\n\n    return params;\n}\n\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, { state: RootState }>(\n    'catalog/fetchProductsAsync',\n    async (_, thunkAPI) => {\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams)\n        try {\n            const response = await agent.Catalog.list(params);\n            console.log('metadata', response.metaData)\n            thunkAPI.dispatch(setMetaData(response.metaData))\n            return response.items;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\n    'catalog/fetchProductAsync',\n    async (productId, thunkAPI) => {\n        try {\n            return await agent.Catalog.details(productId);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const fetchFilters = createAsyncThunk(\n    'catalog/fetchFilters',\n    async (_, thunkAPI) => {\n        try {\n            return agent.Catalog.fetchFilters();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nfunction initParams() {\n    return {\n        pageNumber: 1,\n        pageSize: 6,\n        orderBy: 'name',\n        brands: [],\n        types: []\n    }\n}\n\nexport const catalogSlice = createSlice({\n    name: 'catalog',\n    initialState: productsAdaptor.getInitialState<CatalogState>({\n        productsLoaded: false,\n        filtersLoaded: false,\n        status: 'idle',\n        brands: [],\n        types: [],\n        productParams: initParams(),\n        metaData: null\n    }),\n    reducers: {\n        setProductParams: (state: any, action: any) => {\n\n            state.productsLoaded = false;\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1 }\n\n        },\n        setPageNumber: (state: any, action: any) => {\n            state.productsLoaded = false\n            state.productParams = { ...state.productParams, ...action.payload }\n        },\n        setMetaData: (state: any, action: any) => {\n            state.metaData = action.payload\n        },\n        resetProductParams: (state: any) => {\n            state.productParams = initParams();\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchProductsAsync.pending, (state) => {\n            state.status = 'pendingFetchProducts'\n        });\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\n            productsAdaptor.setAll(state, action.payload)\n            state.status = 'idle'\n            state.productsLoaded = true\n        });\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\n            console.log(action.payload)\n            state.status = 'idle'\n        });\n        builder.addCase(fetchProductAsync.pending, (state) => {\n            state.status = 'pendingFetchProduct'\n        });\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\n            productsAdaptor.upsertOne(state, action.payload)\n            state.status = 'idle'\n        });\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\n            console.log(action)\n            state.status = 'idle'\n        });\n        builder.addCase(fetchFilters.pending, (state) => {\n            state.status = 'pendingFetchFilters'\n        });\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\n            state.brands = action.payload.brands\n            state.types = action.payload.types\n            state.filtersLoaded = true\n            state.status = 'idle'\n        });\n        builder.addCase(fetchFilters.rejected, (state, action) => {\n            console.log(action.payload)\n            state.status = 'idle'\n        })\n    })\n})\n\nexport const productSelectors = productsAdaptor.getSelectors((state: RootState) => state.catalog);\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber } = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport interface CounterState {\n    data: number;\n    title: string;\n}\n\nconst initialState: CounterState = {\n    data: 42,\n    title: 'Check out this counter that uses Redux Toolkit!'\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state, action) => {\n            state.data += action.payload\n        },\n        decrement: (state, action) => {\n            state.data -= action.payload\n        },\n        reset: (state, action) => {\n            state.data = 0\n        }\n    }\n})\n\nexport const {increment, decrement, reset} = counterSlice.actions","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { FieldValues } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\n\nimport agent from \"../../app/api/agent\";\nimport { User } from \"../../app/models/user\";\nimport { setBasket } from \"../basket/basketSlice\";\n\ninterface AccountState {\n    user: User | null;\n\n}\n\nconst initialState: AccountState = {\n    user: null\n}\n\nexport const signInUser = createAsyncThunk<User, FieldValues, {}>(\n    'account/signInUser',\n    async (data, thunkApi) => {\n        try {\n            //console.log('signInUser async Thunk', data)\n            const userDto = await agent.Account.login(data)\n            //This trick in destructuring allows use to break off basket its own object,\n            //and then everything else from userDto into another object called user\n            const { basket, ...user } = userDto;\n            if (basket) {\n                thunkApi.dispatch(setBasket(basket))\n            }\n            localStorage.setItem('user', JSON.stringify(user))\n\n            return user\n        } catch (error: any) {\n            return thunkApi.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\n\nexport const fetchCurrentUser = createAsyncThunk(\n    'account/currentUser',\n    async (_, thunkApi) => {\n        thunkApi.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\n        try {\n            const userDto = await agent.Account.currentUser()\n            const { basket, ...user } = userDto;\n            if (basket) {\n                thunkApi.dispatch(setBasket(basket))\n            }\n            localStorage.setItem('user', JSON.stringify(user))\n            return user\n        } catch (error: any) {\n            return thunkApi.rejectWithValue({ error: error.data })\n        }\n    },\n    {\n        //function that returns true/false that will determine if we execute the payload creator\n        //True = execute, False = do not execute\n        condition: () => {\n            if (!localStorage.getItem('user')) return false\n        }\n    }\n)\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState: initialState,\n    reducers: {\n        signOut: (state: any) => {\n            console.log('logging out user')\n            state.user = null;\n            console.log('state.user: ', state.user)\n            localStorage.removeItem('user')\n            history.push('/')\n        },\n        setUser: (state: any, action: any) => {\n            state.user = action.payload;\n        }\n    },\n\n    extraReducers: (builder) => {\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\n            state.user = null;\n            localStorage.removeItem('user')\n            toast.error('Session expired. Please login again.')\n            history.push('/')\n        })\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state: any, action) => {\n            state.user = action.payload\n        })\n        builder.addMatcher(isAnyOf(signInUser.rejected, fetchCurrentUser.rejected), (state: any, action) => {\n            throw action.payload\n        })\n    }\n\n})\n\nexport const { signOut, setUser } = accountSlice.actions","import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { basketSlice } from '../../features/basket/basketSlice';\nimport { catalogSlice } from '../../features/catalog/catalogSlice';\nimport { counterSlice } from '../../features/contact/counterSlice';\nimport { accountSlice } from '../../features/account/accountSlice';\n\nexport const store = configureStore({\n    reducer: {\n        counter: counterSlice.reducer,\n        basket: basketSlice.reducer,\n        catalog: catalogSlice.reducer,\n        account: accountSlice.reducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { Button, Menu, Fade, MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signOut } from \"../../features/account/accountSlice\";\nimport { clearBasket } from \"../../features/basket/basketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\n\nexport default function SignedInMenu() {\n\n    const dispatch = useAppDispatch()\n    const { user } = useAppSelector(state => state.account)\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <Button\n                color='inherit'\n                onClick={handleClick}\n                sx={{ typography: 'h6' }}\n            >\n                {user?.email}\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem component={Link} to='/orders'>My Orders</MenuItem>\n                <MenuItem onClick={() => {\n                    dispatch(signOut())\n                    dispatch(clearBasket())\n                }}>Logout</MenuItem>\n            </Menu>\n        </>\n    );\n}","import { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@material-ui/core\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport { useAppSelector } from \"../store/configureStore\";\nimport SignedInMenu from \"./SignedInMenu\";\n\n\n\ninterface Props {\n    handleToggleDarkMode: () => void;\n}\n\nconst midLinks = [\n    { title: 'catalog', path: '/catalog' },\n    { title: 'about', path: '/about' },\n    { title: 'contact', path: '/contact' }\n]\n\nconst rightLinks = [\n    { title: 'login', path: '/login' },\n    { title: 'register', path: '/register' }\n]\n\nconst navStyles = {\n    color: 'inherit',\n    textDecoration: 'none',\n    typography: 'h6',\n    '&:hover': {\n        color: 'grey.500'\n    },\n    '&.active': {\n        color: 'text.secondary'\n    }\n}\n\nexport default function Header({ handleToggleDarkMode }: Props) {\n\n    const { basket } = useAppSelector(state => state.basket);\n    const { user } = useAppSelector(state => state.account);\n\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0)\n\n    return (\n        <AppBar position='static' >\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Box display='flex' alignItems='center'>\n                    <Typography variant='h6' component={NavLink} to='/' sx={navStyles} exact>\n                        ReStore\n                    </Typography>\n                    <Switch color='default' onChange={handleToggleDarkMode} />\n                </Box>\n\n\n\n                <List sx={{ display: 'flex' }}>\n                    {midLinks.map(({ title, path }) => (\n                        <ListItem\n                            component={NavLink}\n                            to={path}\n                            key={path}\n                            sx={navStyles}\n                        >\n                            {title.toUpperCase()}\n                        </ListItem>\n                    ))}\n                </List>\n\n                <Box display='flex' alignItems='center'>\n\n                    {user ? (\n                        <>\n                            <IconButton size='large' sx={{ color: 'inherit' }} component={Link} to=\"/basket\">\n                                <Badge badgeContent={itemCount} color='secondary'>\n                                    <ShoppingCart />\n                                </Badge>\n                            </IconButton>\n                            <   SignedInMenu />\n                        </>\n                    ) : (\n                        <List sx={{ display: 'flex' }}>\n                            {rightLinks.map(({ title, path }) => (\n                                <ListItem\n                                    component={NavLink}\n                                    to={path}\n                                    key={path}\n                                    sx={navStyles}\n                                >\n                                    {title.toUpperCase()}\n                                </ListItem>\n                            ))}\n                        </List>\n                    )\n                    }\n\n                </Box>\n\n\n\n            </Toolbar>\n        </AppBar>\n    )\n}","import { Box, Typography } from \"@material-ui/core\";\nimport Slider from \"react-slick\";\n\nexport default function HomePage() {\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n    };\n\n    return (\n        <>\n            <Slider {...settings}>\n                <div>\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 400 }} />\n                </div>\n                <div>\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 300 }} />\n                </div>\n                <div>\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 400 }} />\n                </div>\n            </Slider>\n            <Box display='flex' justifyContent=\"center\" sx={{ p: 4 }}>\n                <Typography variant='h1'>\n                    Welcome to the ReStore!\n                </Typography>\n            </Box>\n        </>\n    )\n}","import { Checkbox, FormControlLabel, FormGroup } from \"@material-ui/core\"\nimport { useState } from \"react\";\n\ninterface Props {\n    items: string[];\n    checked?: string[]\n    onChange: (items: string[]) => void;\n\n}\n\nexport default function CheckboxButtons({ items, onChange, checked }: Props) {\n\n    const [checkedItems, setCheckedItems] = useState(checked || [])\n\n\n\n    function handleChecked(value: string) {\n        console.log('handleChecked value', value)\n        const currentIndex = checkedItems.findIndex(item => item === value);\n        console.log('currentIndex', currentIndex)\n        let newCheckedItems: string[] = []\n        if (currentIndex === -1) newCheckedItems = [...checkedItems, value]\n\n        else newCheckedItems = checkedItems.filter(item => item !== value)\n\n\n        console.log('newCheckedItems', newCheckedItems)\n\n        setCheckedItems(newCheckedItems)\n        onChange(newCheckedItems)\n    }\n\n    return (\n        <FormGroup\n\n        >\n            {items.map(item => {\n                return <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={checkedItems.indexOf(item) !== -1}\n                            onClick={() => handleChecked(item)}\n                        />}\n                    label={item}\n                    key={item} />\n            })}\n        </FormGroup>\n    )\n}\n","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@material-ui/core\"\n\n\ninterface Props {\n    options: any[];\n    onChange: (event: any) => void;\n    selectedValue: string;\n}\n\nexport default function RadioButtonGroup({ options, onChange, selectedValue }: Props) {\n\n\n\n    return (\n        <FormControl>\n            <RadioGroup\n                onChange={onChange}\n                value={selectedValue}\n            >\n                {options.map(({ value, label }) => {\n                    return <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\n                })}\n            </RadioGroup>\n        </FormControl>\n    )\n}","import { Backdrop, CircularProgress, Typography, Box } from \"@material-ui/core\";\n\n\ninterface Props {\n    message?: string\n}\n\n\nexport default function LoadingComponent({message = \"loading...\"}: Props) {\n    return (\n        <Backdrop open={true} invisible={true}>\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\n                <CircularProgress size={100} color='secondary'/>\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}> \n                    {message}\n                </Typography>\n            </Box>\n        </Backdrop>\n    )\n}","import { Box, Typography, Pagination } from \"@material-ui/core\";\nimport LoadingComponent from \"../layout/LoadingComponent\";\nimport { MetaData } from \"../models/pagination\";\n\n\ninterface Props {\n    metaData: MetaData;\n    onPageChange: (page: number) => void\n}\n\nexport default function AppPagination({ metaData, onPageChange }: Props) {\n\n    const { currentPage, totalPages, totalCount, pageSize } = metaData\n    console.log('metadata in app pagination', metaData)\n\n    if (!metaData) {\n        return (\n            <LoadingComponent message=\"Loading the Catalog\" />\n        )\n    }\n\n    return (\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n            <Typography>\n                Displaying {(currentPage - 1) * pageSize + 1} - {currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize} of {totalCount} items\n            </Typography>\n            <Pagination\n                color='secondary'\n                size=\"small\"\n                count={totalPages}\n                page={currentPage}\n                onChange={(e, page) => onPageChange(page)}\n            />\n        </Box>\n    )\n}","import { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@material-ui/core\";\n\nimport { LoadingButton } from \"@material-ui/lab\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Product } from \"../../app/models/product\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\n\ninterface Props {\n  product: Product\n}\n\nexport default function ProductCard({ product }: Props) {\n\n  const { status } = useAppSelector(state => state.basket)\n  const dispatch = useAppDispatch()\n\n\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: 'secondary.main' }}>\n            {product.name.charAt(0).toUpperCase()}\n          </Avatar>\n        }\n        title={product.name}\n        titleTypographyProps={{\n          sx: { fontWeight: 'bold', color: 'secondary.main' }\n        }}\n      />\n      <CardMedia\n        sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\n        image={product.pictureUrl}\n        title={product.name}\n      />\n      <CardContent>\n        <Typography gutterBottom color='secondary' variant=\"h5\" >\n          ${(product.price / 100).toFixed(2)}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {product.brand} / {product.type}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LoadingButton loading={status.includes('pendingAddItem' + product.id)} onClick={() => dispatch(addBasketItemAsync({ productId: product.id }))} size=\"small\">Add to cart</LoadingButton>\n        <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\n      </CardActions>\n    </Card>\n  )\n}","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Grid,\n    Skeleton\n} from \"@material-ui/core\";\n\nexport default function ProductCardSkeleton() {\n    return (\n        <Grid item xs component={Card}>\n            <CardHeader\n                avatar={\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n                }\n                title={\n                    <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                    />\n                }\n            />\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\n            <CardContent>\n                <>\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </>\n            </CardContent>\n            <CardActions>\n                <>\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\n                </>\n            </CardActions>\n        </Grid>\n    )\n}","import { Grid } from \"@material-ui/core\"\nimport { Product } from \"../../app/models/product\"\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport ProductCard from \"./ProductCard\";\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\n\ninterface Props {\n    products: Product[];\n}\n\nexport default function ProductList({ products }: Props) {\n\n    const { productsLoaded } = useAppSelector(state => state.catalog)\n\n    return (\n        <Grid container spacing={4}>\n            {products.map(product => (\n                <Grid item xs={4} key={product.id} >\n                    {!productsLoaded ? (\n                        <ProductCardSkeleton />\n                    ) : (\n                        <ProductCard product={product} />\n                    )}\n\n                </Grid>\n\n            ))}\n\n\n        </Grid>\n    )\n}","import { debounce, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setProductParams } from \"./catalogSlice\";\n\nexport default function ProductSearch() {\n\n    const { productParams } = useAppSelector(state => state.catalog)\n    const dispatch = useAppDispatch();\n\n    const [searchText, setSearchText] = useState(productParams.searchTerm)\n\n\n    const debouncedSearch = debounce((event: any) => {\n        dispatch(setProductParams({ searchTerm: event.target.value }))\n    }, 1000)\n\n\n\n    return (\n        <TextField\n            label='Search Products'\n            variant='outlined'\n            fullWidth\n            value={searchText || ''}\n            onChange={(event: any) => {\n                setSearchText(event.target.value)\n                debouncedSearch(event)\n            }}\n        />\n    )\n}","\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\nimport AppPagination from \"../../app/components/AppPagination\";\n\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\nimport ProductList from \"./ProductList\";\nimport ProductSearch from \"./ProductSearch\";\n\n\nconst sortOptions = [\n  { value: 'name', label: 'Alphabetical' },\n  { value: 'priceDesc', label: 'Price - High to Low' },\n  { value: 'price', label: 'Price - Low to High' }\n]\n\n\n\nexport default function Catalog() {\n\n  const products = useAppSelector(productSelectors.selectAll)\n  const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } = useAppSelector(state => state.catalog)\n  const dispatch = useAppDispatch()\n\n\n  useEffect(() => {\n    if (!productsLoaded) dispatch(fetchProductsAsync())\n\n  }, [productsLoaded, dispatch])\n\n  useEffect(() => {\n    if (!filtersLoaded) dispatch(fetchFilters())\n\n  }, [filtersLoaded, dispatch])\n\n  if (!filtersLoaded) {\n    return (\n      <LoadingComponent message=\"Loading the Catalog\" />\n    )\n  }\n\n  console.log('metadata in catalog', metaData)\n\n  return (\n    <Grid container columnSpacing={4}>\n      <Grid item xs={3}>\n        <Paper sx={{ mb: 2 }}>\n          <ProductSearch />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <RadioButtonGroup\n            selectedValue={productParams.orderBy}\n            onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\n            options={sortOptions}\n          />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <CheckboxButtons\n            items={brands}\n            checked={productParams.brands}\n            onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\n          />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <CheckboxButtons\n            items={types}\n            checked={productParams.types}\n            onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={9}>\n        <ProductList products={products} />\n      </Grid>\n      <Grid item xs={3} />\n      <Grid item xs={9} sx={{ mb: 2 }}>\n        {metaData &&\n          <AppPagination\n            onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\n            metaData={metaData}\n          />}\n      </Grid>\n    </Grid>\n  )\n}","import { Button, Container, Divider, Paper, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default function NotFound() {\n\n    return (\n        <Container component={Paper} sx={{height:400}}>\n            <Typography gutterBottom variant='h3'>\n                Oops... We couldn't find the page you are looking for!\n            </Typography>\n            <Divider />\n            <Button fullWidth component={Link} to='/catalog'> Return to Store </Button>\n        </Container>\n    )\n}","import { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, Typography } from \"@material-ui/core\";\nimport { LoadingButton } from \"@material-ui/lab\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport NotFound from \"../../app/errors/NotFound\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\n\nexport default function ProductDetails() {\n\n    const { status } = useAppSelector(state => state.basket)\n    const { id } = useParams<{ id: string }>();\n    const product = useAppSelector(state => productSelectors.selectById(state, id))\n    const { status: productStatus } = useAppSelector(state => state.catalog)\n    const [buttonLoading, setButtonLoading] = useState(false)\n\n\n\n    const dispatch = useAppDispatch()\n\n    function handleAddItem(productId: number) {\n        setButtonLoading(true);\n\n        dispatch(addBasketItemAsync({ productId, quantity: 1 }))\n    }\n\n    useEffect(() => {\n        if (!product) dispatch(fetchProductAsync(parseInt(id)))\n    }, [id, dispatch, product])\n\n    if (productStatus.includes('pending')) return <LoadingComponent message=\"Loading Product...\" />\n\n    if (!product) return <NotFound />\n\n    return (\n        <Grid container spacing={6}>\n            <Grid item xs={6}>\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant='h4'>{product.name}</Typography>\n                <Divider sx={{ mb: 2 }} />\n                <Typography variant='h4' color='secondary'>${(product.price / 100).toFixed(2)}</Typography>\n                <TableContainer>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>{product.name}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Description</TableCell>\n                                <TableCell>{product.description}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Brand</TableCell>\n                                <TableCell>{product.brand}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Type</TableCell>\n                                <TableCell>{product.type}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>In Stock</TableCell>\n                                <TableCell>{product.quantityInStock}</TableCell>\n                            </TableRow>\n\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <LoadingButton\n                    loading={status.includes('pending')}\n                    variant='contained'\n                    size='small'\n                    sx={{ marginTop: 5 }}\n                    onClick={() => handleAddItem(parseInt(id))}>\n                    Add to Cart\n                </LoadingButton>\n            </Grid>\n        </Grid>\n    )\n}","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport agent from \"../../app/api/agent\";\n\nexport default function AboutPage() {\n\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n    function getVaidationError() {\n        agent.TestErrors.getValidationError()\n            .then(() => console.log('we should never see this'))\n            .catch((error) => {\n                setValidationErrors(error)\n            })\n\n\n\n\n    }\n\n    return (\n        <Container>\n            <Typography gutterBottom variant='h2'>\n                Errors for testing purposes\n            </Typography>\n            <ButtonGroup fullWidth>\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\n                <Button variant='contained' onClick={getVaidationError}>Test Validation Error</Button>\n            </ButtonGroup>\n            {validationErrors.length > 0 &&\n                <Alert severity='error'>\n                    <AlertTitle>Validation Errors</AlertTitle>\n                    <List>\n                        {validationErrors.map((error) => {\n                            return (<ListItem key={error}>\n                                <ListItemText>\n                                    {error}\n                                </ListItemText>\n                            </ListItem>\n                            )\n                        })}\n                    </List>\n                </Alert>\n            }\n        </Container>\n    )\n}","import { Button, ButtonGroup, Typography } from \"@material-ui/core\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { increment, decrement, reset } from \"./counterSlice\";\n\nexport default function ContactPage() {\n\n    const dispatch = useAppDispatch()\n\n    const {data, title} = useAppSelector(state => state.counter)\n\n    return (\n        <>\n            <Typography variant='h2'>\n                {title}\n            </Typography>\n            <Typography variant='h5'>\n                The data is: {data}\n            </Typography>\n            <ButtonGroup>\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increase</Button>\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrease</Button>\n                <Button onClick={() => dispatch(reset(0))} variant='contained' color='secondary'>Reset</Button>\n            </ButtonGroup>\n        </>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@material-ui/core\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport default function ServerError() {\n\n    const history = useHistory()\n    const {state} = useLocation<any>()\n\n    return(\n        <Container component={Paper}>\n            {state?.error ? (\n                <>\n                <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\n                    <Divider />\n                <Typography>{state.error.detail || 'Internal Server Error'}</Typography>\n                </>\n            ) : (\n                <Typography variant='h5' gutterBottom>No Errors Here!</Typography>\n            ) }\n            <Button onClick={() => history.push('/catalog')}>Return to Store</Button>\n        </Container>\n    )\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@material-ui/core\";\n\n\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\n\ninterface Props {\n    providedSubtotal?: number\n}\n\nexport default function BasketSummary({ providedSubtotal }: Props) {\n\n    const { basket } = useAppSelector(state => state.basket)\n\n    function calculateSubtotal() {\n        if (!basket) return 0\n        if (providedSubtotal === undefined) {\n            const calculatedSubtotal = basket?.items.reduce((sum, item) => {\n                return sum + (item.price * item.quantity)\n            }, 0)\n\n            return calculatedSubtotal\n        }\n        return providedSubtotal\n\n    }\n\n    function calculateDeliveryFee(sub: number) {\n        if (sub / 100 >= 100.00) {\n            return 0\n        } else {\n            return 500\n        }\n    }\n\n    const subtotal = calculateSubtotal()\n    const deliveryFee = calculateDeliveryFee(subtotal)\n\n    return (\n        <>\n            <TableContainer component={Paper} variant={'outlined'}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell colSpan={2}>Subtotal</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Total</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <span style={{ fontStyle: 'italic' }}>*Orders over $100 qualify for free delivery</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@material-ui/core\";\nimport { Remove, Add, Delete } from \"@material-ui/icons\";\nimport { LoadingButton } from \"@material-ui/lab\";\nimport { BasketItem } from \"../../app/models/baskets\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\n\ninterface Props {\n    items: BasketItem[] | undefined;\n    isBasket?: boolean;\n}\n\nexport default function BasketTable({ items, isBasket = true }: Props) {\n\n    const { status } = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch()\n\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Product</TableCell>\n                        <TableCell align=\"right\">Price</TableCell>\n                        <TableCell align=\"center\">Quantity</TableCell>\n                        <TableCell align=\"right\">SubTotal</TableCell>\n                        {isBasket && <><TableCell align=\"right\"></TableCell></>}\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {items?.map((item) => (\n                        <TableRow\n                            key={item.productId}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Box display='flex' alignItems='center'>\n                                    <img src={item.pictureUrl} alt={item.nameOfProduct} style={{ height: 50, marginRight: 20 }} />\n                                    <span>{item.nameOfProduct}</span>\n                                </Box>\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat(item.price)}</TableCell>\n                            <TableCell align=\"center\">\n                                {isBasket && <><LoadingButton\n                                    color='error'\n                                    loading={status.includes('pendingRemoveItem' + item.productId)}\n                                    onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1 }))}>\n                                    <Remove />\n                                </LoadingButton> </>}\n                                {item.quantity}\n                                {isBasket && <><LoadingButton\n                                    color='secondary'\n                                    loading={status.includes('pendingAddItem' + item.productId)}\n                                    onClick={() => dispatch(addBasketItemAsync({ productId: item.productId, quantity: 1 }))}>\n                                    <Add />\n                                </LoadingButton> </>}\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat((item.price * item.quantity))}</TableCell>\n                            {isBasket && <TableCell align=\"right\">\n                                <LoadingButton\n                                    color='primary'\n                                    loading={status.includes('pendingRemoveItem' + item.productId)}\n                                    onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity }))}>\n                                    <Delete />\n                                </LoadingButton>\n                            </TableCell>}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}","import { Button, Grid, Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport BasketSummary from \"./BasketSummary\";\nimport BasketTable from \"./BasketTable\";\n\n\n\nexport default function BasketPage() {\n\n    const { basket } = useAppSelector(state => state.basket);\n    //const dispatch = useAppDispatch()\n\n\n\n\n    if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\n    return (\n        <>\n            <BasketTable items={basket.items} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary />\n                    <Button\n                        fullWidth\n                        size='large'\n                        variant='contained'\n                        component={Link}\n                        to='/checkout'\n                    >\n                        Checkout\n                    </Button>\n                </Grid>\n\n            </Grid>\n        </>\n    )\n}","\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Avatar, Box, Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport Container from '@material-ui/core/Container'\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom'\n\nimport { FieldValues, useForm } from 'react-hook-form';\nimport { LoadingButton } from '@material-ui/lab';\nimport { useAppDispatch } from '../../app/store/configureStore';\n\nimport { signInUser } from './accountSlice';\n\n\n\nconst theme = createTheme();\n\nexport default function Login() {\n\n    const history = useHistory()\n    const location = useLocation<any>()\n    const dispatch = useAppDispatch()\n\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    })\n\n    async function submitForm(data: FieldValues) {\n        try {\n            await dispatch(signInUser(data))\n\n            history.push('/catalog')\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Username\"\n                        autoFocus\n                        {...register('username', { required: 'Username is required' })}\n                        error={!!errors.username}\n                        helperText={errors?.username?.message}\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        {...register('password', { required: 'password is required' })}\n                        error={!!errors.password}\n                        helperText={errors?.password?.message}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <LoadingButton\n                        loading={isSubmitting}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        disabled={!isValid}\n                    >\n                        Sign In\n                    </LoadingButton>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/register\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n\n            </Container>\n        </ThemeProvider>\n    );\n}","\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Avatar, Box, Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport Container from '@material-ui/core/Container'\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@material-ui/lab';\n\n\n\nimport agent from '../../app/api/agent';\nimport { toast } from 'react-toastify';\n\n\n\n\nconst theme = createTheme();\n\nexport default function Register() {\n\n    const history = useHistory()\n\n\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    })\n\n    function handleApiErrors(errors: any) {\n        console.log(errors)\n\n        if (errors) {\n            errors.forEach((error: string) => {\n                if (error.includes('Password')) {\n                    setError('password', { message: error })\n                } else if (error.includes('Email')) {\n                    setError('Email', { message: error })\n                } else if (error.includes('Username')) {\n                    setError('username', { message: error })\n                }\n            });\n        }\n    }\n\n\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Register\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        agent.Account.register(data)\n                            .then(() => {\n                                toast.success('Registration successful! You can now log in')\n                                history.push('/login')\n                            })\n                            .catch(error => handleApiErrors(error))\n                    })}\n                    noValidate sx={{ mt: 1 }}\n                >\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Username\"\n                        autoFocus\n                        {...register('username', { required: 'Username is required' })}\n                        error={!!errors.username}\n                        helperText={errors?.username?.message}\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Email\"\n                        {...register('email', {\n                            required: 'Email is required',\n                            pattern: {\n                                value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n                                message: 'Not a valid email address'\n                            }\n                        })}\n                        error={!!errors.email}\n                        helperText={errors?.email?.message}\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        {...register('password', {\n                            required: 'password is required',\n                            pattern: {\n                                value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\n                                message: 'Password does not meet complexity requirements'\n                            }\n                        })}\n                        error={!!errors.password}\n                        helperText={errors?.password?.message}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n\n\n                    <LoadingButton\n                        loading={isSubmitting}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        disabled={!isValid}\n                    >\n                        Register\n                    </LoadingButton>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/login\">\n                                {\"Already have an account? Sign In\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n\n            </Container>\n        </ThemeProvider>\n    );\n}","// A wrapper for <Route> that redirects to the login\n\nimport { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useAppSelector } from \"../store/configureStore\";\n\ninterface Props extends RouteProps {\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\n}\n\n// screen if you're not yet authenticated.\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n    const { user } = useAppSelector(state => state.account)\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                user ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: props.location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}","import { Box, Button, Grid, Typography } from \"@material-ui/core\";\nimport { BasketItem } from \"../../app/models/baskets\";\nimport { Order } from \"../../app/models/order\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\ninterface Props {\n    order: Order;\n    setSelectedOrder: (id: number) => void;\n}\n\nexport default function OrderDetails({ order, setSelectedOrder }: Props) {\n\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n\n    return (\n        <>\n            <Box>\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order #{order.id} - {order.orderStatus}</Typography>\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to Orders</Button>\n            </Box>\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary providedSubtotal={subtotal} />\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Order } from \"../../app/models/order\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport OrderDetails from \"./OrderDetails\";\n\nexport default function Orders() {\n\n    const [orders, setOrders] = useState<Order[] | null>(null)\n    const [loading, setLoading] = useState(true)\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0)\n\n    useEffect(() => {\n        agent.Orders.list()\n            .then(orders => setOrders(orders))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false))\n    }, [])\n\n    if (loading) return <LoadingComponent message=\"Loading Orders Page\" />\n\n    if (selectedOrderNumber > 0) {\n        return (\n            <OrderDetails\n                order={orders?.find(o => o.id === selectedOrderNumber)!}\n                setSelectedOrder={setSelectedOrderNumber}\n            />\n        )\n    }\n\n    return (\n\n\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Order Number</TableCell>\n                        <TableCell align=\"right\">Total</TableCell>\n                        <TableCell align=\"right\">Order Date</TableCell>\n                        <TableCell align=\"right\">Order Status</TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orders?.map((order) => (\n                        <TableRow\n                            key={order.id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {order.id}\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\n                            <TableCell align=\"right\">\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>View</Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import { FormControlLabel, Checkbox } from \"@material-ui/core\";\n\n\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    disabled: boolean;\n}\n\nexport default function AppCheckbox(props: Props) {\n\n    const { field } = useController({ ...props, defaultValue: false })\n\n    return (\n        <FormControlLabel\n            control={\n                <Checkbox\n                    {...field}\n                    checked={field.value}\n                    color='secondary'\n                    disabled={props.disabled}\n                />\n            }\n            label={props.label}\n\n        />\n    )\n}","import { TextField } from \"@material-ui/core\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n}\n\nexport default function AppTextInput(props: Props) {\n\n    const { fieldState, field } = useController({ ...props, defaultValue: '' })\n\n    return (\n        <TextField\n            {...props}\n            {...field}\n            fullWidth\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n        />\n\n\n    )\n}","import { Typography, Grid } from \"@material-ui/core\";\nimport { useFormContext } from \"react-hook-form\";\nimport AppCheckbox from \"../../app/components/AppCheckbox\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\n\nexport default function AddressForm() {\n\n    const { control, formState } = useFormContext();\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                Shipping address\n            </Typography>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12}>\n                    <AppTextInput\n                        control={control}\n                        name='fullName'\n                        label='Full Name'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput\n                        control={control}\n                        name='address1'\n                        label='Address Line 1'\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput\n                        control={control}\n                        name='address2'\n                        label='Address Line 2'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput\n                        control={control}\n                        name='city'\n                        label='City'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput\n                        control={control}\n                        name='state'\n                        label='State'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput\n                        control={control}\n                        name='postCode'\n                        label='Postal Code'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput\n                        control={control}\n                        name='country'\n                        label='Country'\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppCheckbox\n                        name='saveAddress'\n                        label='Save this as the default address'\n                        control={control}\n                        disabled={!formState.isDirty}\n                    />\n                </Grid>\n            </Grid>\n\n\n        </>\n    );\n}\n","import { InputBaseComponentProps } from \"@material-ui/core\";\nimport { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { Ref } from \"react\";\n\ninterface Props extends InputBaseComponentProps { }\n\nexport const StripeInput = forwardRef(function StripeInput({ component: Component, ...props }: Props, ref: Ref<unknown>) {\n    const elementRef = useRef<any>()\n\n    useImperativeHandle(ref, () => ({\n        focus: () => elementRef.current.focus\n    }))\n\n    return (\n        <Component\n            onReady={(element: any) => elementRef.current = element}\n            {...props}\n        />\n    )\n})","import { Typography, Grid, TextField } from \"@material-ui/core\";\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from \"@stripe/react-stripe-js\";\nimport { StripeElementType } from \"@stripe/stripe-js\";\n\nimport { useFormContext } from \"react-hook-form\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\nimport { StripeInput } from \"./StripeInput\";\n\ninterface Props {\n    cardState: { elementError: { [key in StripeElementType]?: string } };\n    onCardInputChange: (event: any) => void;\n}\n\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\n\n    const { control } = useFormContext()\n\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                Payment method\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                    <AppTextInput name=\"nameOnCard\" label='Name on card' control={control} />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        onChange={onCardInputChange}\n                        error={!!cardState.elementError.cardNumber}\n                        helperText={cardState.elementError.cardNumber}\n                        id=\"cardNumber\"\n                        label=\"Card number\"\n                        fullWidth\n                        autoComplete=\"cc-number\"\n                        variant=\"outlined\"\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            inputComponent: StripeInput,\n                            inputProps: {\n                                component: CardNumberElement\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        onChange={onCardInputChange}\n                        error={!!cardState.elementError.cardExpiry}\n                        helperText={cardState.elementError.cardExpiry}\n                        id=\"expDate\"\n                        label=\"Expiry date\"\n                        fullWidth\n                        autoComplete=\"cc-exp\"\n                        variant=\"outlined\"\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            inputComponent: StripeInput,\n                            inputProps: {\n                                component: CardExpiryElement\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        onChange={onCardInputChange}\n                        error={!!cardState.elementError.cardCvc}\n                        helperText={cardState.elementError.cardCvc}\n                        id=\"cvv\"\n                        label=\"CVV\"\n                        fullWidth\n                        autoComplete=\"cc-csc\"\n                        variant=\"outlined\"\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            inputComponent: StripeInput,\n                            inputProps: {\n                                component: CardCvcElement\n                            }\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import { Grid, Typography } from '@material-ui/core';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport BasketSummary from '../basket/BasketSummary';\nimport BasketTable from '../basket/BasketTable';\n\n\nexport default function Review() {\n    const { basket } = useAppSelector(state => state.basket)\n    const items = basket?.items\n    console.log(basket)\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                Order summary\n            </Typography>\n            {basket &&\n                <>\n                    <BasketTable items={items} isBasket={false} />\n                </>}\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary />\n\n                </Grid>\n\n            </Grid>\n        </>\n    );\n}","import * as yup from 'yup'\n\nexport const validationSchema = [\n    yup.object({\n        fullName: yup.string().required('Full name is required'),\n        address1: yup.string().required('Address Line 1 is required'),\n        //address2: yup.string().required(),\n        city: yup.string().required(),\n        state: yup.string().required('State is required'),\n        country: yup.string().required('Country is required'),\n        postCode: yup.string().required('Postal Code is required')\n    }),\n\n    yup.object(),\n    yup.object({\n        nameOnCard: yup.string().required()\n    })\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { Field, FieldValues, FormProvider, useForm } from \"react-hook-form\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { validationSchema } from './checkoutValidation';\nimport agent from \"../../app/api/agent\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { clearBasket } from \"../basket/basketSlice\";\nimport { LoadingButton } from \"@material-ui/lab\";\nimport { StripeElementType } from \"@stripe/stripe-js\";\nimport { DH_CHECK_P_NOT_SAFE_PRIME } from \"constants\";\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\n\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\n\n\nexport default function CheckoutPage() {\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [orderNumber, setOrderNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useAppDispatch()\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} })\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false })\n    const [paymentMessage, setPaymentMessage] = useState('')\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false)\n    const { basket } = useAppSelector(state => state.basket)\n    const stripe = useStripe()\n    const elements = useElements()\n\n    function onCardInputChange(event: any) {\n        setCardState({\n            ...cardState,\n            elementError: {\n                ...cardState.elementError,\n                [event.elementType]: event.error?.message\n            }\n        }\n        )\n        setCardComplete({\n            ...cardComplete,\n            [event.elementType]: event.complete\n        })\n    }\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return <AddressForm />;\n            case 1:\n                return <Review />;\n            case 2:\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\n            default:\n                throw new Error('Unknown step');\n        }\n    }\n\n    const currentValidationSchema = validationSchema[activeStep]\n\n    const methods = useForm({\n        mode: 'all',\n        resolver: yupResolver(currentValidationSchema)\n    })\n\n    useEffect(() => {\n        agent.Account.fetchAddress()\n            .then(response => {\n                if (response) {\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\n                }\n            })\n    }, [methods])\n\n    async function submitOrder(data: FieldValues) {\n        setLoading(true)\n        const { nameOnCard, saveAddress, ...shippingAddress } = data\n        if (!stripe || !elements) return //stripe not ready\n        try {\n            const cardElement = elements.getElement(CardNumberElement)\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\n                payment_method: {\n                    card: cardElement!,\n                    billing_details: {\n                        name: nameOnCard\n                    }\n                }\n            })\n            console.log(paymentResult)\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress })\n                setOrderNumber(orderNumber)\n                setPaymentSucceeded(true)\n                setPaymentMessage('Thank you! We have received your payment!')\n                setActiveStep(activeStep + 1)\n                dispatch(clearBasket())\n                setLoading(false)\n            } else {\n                setPaymentMessage(paymentResult.error?.message!)\n                setPaymentSucceeded(false)\n                setLoading(false)\n                setActiveStep(activeStep + 1)\n            }\n        } catch (error: any) {\n            console.log(error)\n            setLoading(false)\n        }\n    }\n\n    const handleNext = async (data: FieldValues) => {\n        if (activeStep === steps.length - 1) {\n            await submitOrder(data)\n\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    function submitDisabled(): boolean {\n        if (activeStep === steps.length - 1) {\n\n            return !cardComplete.cardCvc\n                || !cardComplete.cardExpiry\n                || !cardComplete.cardNumber\n                || !methods.formState.isValid\n        } else {\n            return !methods.formState.isValid\n        }\n    }\n\n\n\n    return (\n        <FormProvider {...methods}>\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                    Checkout\n                </Typography>\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <>\n                    {activeStep === steps.length ? (\n                        <>\n                            <Typography variant=\"h5\" gutterBottom>\n                                {paymentMessage}\n                            </Typography>\n                            {paymentSucceeded ? (\n                                <Typography variant=\"subtitle1\">\n                                    Your order number is #{orderNumber}. We have emailed not your order: ;\n                                    confirmation, and will not send you an update when your order has\n                                    shipped because I already got your money, motherfucker!!\n                                </Typography>\n                            ) : (\n                                <Button variant=\"contained\" onClick={handleBack}>\n                                    Go back and try again...\n                                </Button>\n                            )}\n\n                        </>\n                    ) : (\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\n                            {getStepContent(activeStep)}\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                                {activeStep !== 0 && (\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                                        Back\n                                    </Button>\n                                )}\n                                <LoadingButton\n                                    loading={loading}\n                                    variant=\"contained\"\n                                    type='submit'\n                                    sx={{ mt: 3, ml: 1 }}\n                                    disabled={submitDisabled()}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                                </LoadingButton>\n                            </Box>\n                        </form>\n                    )}\n                </>\n            </Paper>\n        </FormProvider>\n    );\n}\n","import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setBasket } from \"../basket/basketSlice\";\nimport CheckoutPage from \"./CheckoutPage\";\n\nconst stripePromise = loadStripe(\"pk_test_51LHAWSDQSJEkNxCJI4um5NjxpsXNdfRDHnfTeERDGOfwl0iHfAlTYROqCIUeRnq585kNbAKLcNHCWeeEDecOhMcz00OWiH3BbW\")\n\nexport default function CheckoutWrapper() {\n\n    const dispatch = useAppDispatch()\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        agent.Payments.createPaymentIntent()\n            .then(basket => dispatch(setBasket(basket)))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false))\n\n\n    }, [dispatch])\n\n    if (loading) return <LoadingComponent message=\"Loading Checkout....\" />\n\n    return (\n        <Elements stripe={stripePromise}>\n            <CheckoutPage />\n        </Elements>\n    )\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport './styles.css';\nimport Header from './Header';\nimport { Container, createTheme, CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/system';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport Catalog from '../../features/catalog/Catalog';\nimport ProductDetails from '../../features/catalog/ProductDetails';\nimport AboutPage from '../../features/about/AboutPage';\nimport ContactPage from '../../features/contact/ContactPage';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport ServerError from '../errors/ServerError';\nimport NotFound from '../errors/NotFound';\nimport BasketPage from '../../features/basket/BasketPage';\nimport LoadingComponent from './LoadingComponent';\nimport { useAppDispatch } from '../store/configureStore';\nimport { fetchBasketAsync } from '../../features/basket/basketSlice';\nimport Login from '../../features/account/Login';\nimport Register from '../../features/account/Register';\nimport { fetchCurrentUser } from '../../features/account/accountSlice';\nimport PrivateRoute from './PrivateRoute';\n\nimport Orders from '../../features/orders/Orders';\nimport CheckoutWrapper from '../../features/checkout/CheckoutWrapper';\n\n\n\n\n\nfunction App() {\n\n  const dispatch = useAppDispatch()\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser())\n      await dispatch(fetchBasketAsync())\n    } catch (error: any) {\n      console.log(error)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false))\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false)\n  const paletteType = darkMode ? 'dark' : 'light'\n  const handleToggleDarkMode = () => {\n    setDarkMode(!darkMode)\n  }\n\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\n      }\n    }\n  })\n\n  if (loading) return <LoadingComponent message=\"Loading App...\" />\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <CssBaseline />\n      <Header handleToggleDarkMode={handleToggleDarkMode} />\n      <Route path='/' exact component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{ mt: 4 }}>\n          <Switch>\n            <Route path='/catalog' exact component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/Contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      )} />\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext, PropsWithChildren, useContext, useState } from \"react\";\nimport { Basket } from \"../models/baskets\";\n\ninterface StoreContextValue {\n    basket: Basket | null;\n    setBasket: (basket: Basket) => void;\n    removeItem: (productId: number, quantity: number) => void;\n\n}\n\nexport const StoreContext = createContext<StoreContextValue | undefined>(undefined)\n\nexport function useStoreContext() {\n    const context = useContext(StoreContext)\n\n    if (context === undefined) {\n        throw Error(\"Oops, we don't seem to be inside the Provider\")\n    }\n\n    return context\n}\n\nexport function StoreProvider({children}: PropsWithChildren<any>){\n\n    const [basket, setBasket] = useState<Basket | null>(null)\n\n    function removeItem(productId: number, quantity: number) {\n        if (!basket) return;\n\n        const items =[...basket.items]\n        const itemIndex = items.findIndex(i => i.productId === productId)\n\n        if (itemIndex >= 0) {\n            items[itemIndex].quantity -= quantity\n\n            if (items[itemIndex].quantity <= 0) {\n                items.splice(itemIndex, 1)\n            }\n\n            setBasket(prevState => {\n                return {...prevState!, items}\n            })\n        }\n    }\n\n    return (\n        <StoreContext.Provider value={{basket, setBasket, removeItem}}>\n            {children}\n        </StoreContext.Provider>\n    )\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport './index.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserHistory } from 'history'\nimport { StoreProvider } from './app/context/StoreContext';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css'\n\n\nexport const history = createBrowserHistory()\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <StoreProvider>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </StoreProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}