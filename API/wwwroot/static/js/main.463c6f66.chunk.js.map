{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","features/account/accountSlice.ts","app/store/configureStore.ts","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/home/HomePage.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","app/components/AppPagination.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","app/hooks/useProducts.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetails.tsx","features/orders/Orders.tsx","app/components/AppCheckbox.tsx","app/components/AppTextInput.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppDropzone.tsx","app/components/AppSelectList.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","app/context/StoreContext.tsx","index.tsx"],"names":["PaginatedResponse","items","metaData","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","data","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","pagination","JSON","parse","error","status","errors","modelStateErrors","key","push","flat","toast","title","history","pathname","state","toString","Promise","reject","requests","url","params","get","then","body","post","delete","put","createFormData","item","formData","FormData","append","Basket","addItem","productId","quantity","deleteItem","agent","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","currencyFormat","price","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","createSlice","name","initialState","basket","reducers","setBasket","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","productsAdaptor","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","pageNumber","pageSize","orderBy","searchTerm","types","length","brands","fetchProductsAsync","catalog","dispatch","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","counterSlice","increment","decrement","reset","signInUser","thunkApi","userDto","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","removeItem","roles","atob","split","configureStore","reducer","counter","useAppDispatch","useDispatch","useAppSelector","useSelector","SignedInMenu","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","color","onClick","event","currentTarget","sx","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","component","Link","to","midLinks","path","rightLinks","navStyles","textDecoration","Header","handleToggleDarkMode","itemCount","reduce","sum","AppBar","position","Toolbar","display","justifyContent","alignItems","Box","Typography","variant","NavLink","exact","Switch","onChange","List","map","ListItem","toUpperCase","includes","IconButton","size","Badge","badgeContent","ShoppingCart","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","style","width","maxHeight","p","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","FormControlLabel","control","Checkbox","indexOf","value","currentIndex","newCheckedItems","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","Radio","LoadingComponent","message","Backdrop","invisible","height","CircularProgress","top","AppPagination","onPageChange","currentPage","totalPages","totalCount","Pagination","count","page","e","handlePageChange","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","gutterBottom","brand","type","CardActions","LoadingButton","loading","ProductCardSkeleton","Grid","xs","Skeleton","animation","marginBottom","ProductList","products","container","spacing","ProductSearch","searchText","setSearchText","debouncedSearch","debounce","target","TextField","fullWidth","useProducts","selectAll","useEffect","sortOptions","columnSpacing","Paper","mb","NotFound","Container","Divider","ProductDetails","useParams","selectById","productStatus","setButtonLoading","parseInt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","marginTop","AboutPage","validationErrors","setValidationErrors","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","ServerError","useHistory","useLocation","detail","BasketSummary","providedSubtotal","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","nameOfProduct","marginRight","Remove","Add","Delete","BasketPage","theme","createTheme","Login","useForm","mode","handleSubmit","formState","isSubmitting","isValid","ThemeProvider","maxWidth","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","disabled","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","from","location","OrderDetails","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","find","o","total","orderDate","AppCheckbox","field","useController","defaultValue","AppTextInput","fieldState","multiline","rows","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","city","country","postCode","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","MyDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelecteProduct","startIcon","Edit","App","initApp","darkMode","setDarkMode","paletteType","palette","background","default","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StoreContext","createContext","StoreProvider","children","Provider","prevState","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.463c6f66.chunk.js","sourcesContent":["export interface MetaData {\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    totalCount: number;\n}\n\nexport class PaginatedResponse<T> {\n    items: T;\n    metaData: MetaData;\n\n    constructor(items: T, metaData: MetaData) {\n        this.items = items;\n        this.metaData = metaData;\n    }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { request } from \"http\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { PaginatedResponse } from \"../models/pagination\";\nimport { store } from \"../store/configureStore\";\n\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 1000))\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response: AxiosResponse) => response.data\n\naxios.interceptors.request.use(config => {\n    const token = store.getState().account.user?.token\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n})\n\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') {\n        await sleep();\n    }\n\n\n    const pagination = response.headers['pagination']\n    if (pagination) {\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination))\n\n    }\n    return response\n}, (error: AxiosError) => {\n    const { data, status } = error.response!\n    switch (status) {\n        case 400:\n            if (data.errors) {\n                const modelStateErrors: string[] = []\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modelStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modelStateErrors.flat();\n            }\n            toast.error(data.title)\n            break;\n        case 401:\n            toast.error(data.title)\n            break;\n\n        case 500:\n            history.push({\n                pathname: '/server-error',\n                state: { error: data }\n            })\n            toast.error(data.title)\n            break;\n        case 403:\n            toast.error('You are not allowed to do that')\n            break;\n        default:\n            toast.error(`An unspecified error occurred: ${status.toString()}`)\n            break;\n    }\n    return Promise.reject(error.response)\n})\n\nconst requests = {\n    get: (url: string, params?: URLSearchParams) => axios.get(url, { params }).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody),\n    postForm: (url: string, data: FormData) => axios.post(url, data, {\n        headers: { 'Content-type': 'multipart/form-data' }\n    }).then(responseBody),\n    putForm: (url: string, data: FormData) => axios.put(url, data, {\n        headers: { 'Content-type': 'multipart/form-data' }\n    }).then(responseBody)\n}\n\nconst createFormData = (item: any) => {\n    let formData = new FormData();\n    for (const key in item) {\n        formData.append(key, item[key])\n    }\n    return formData\n}\n\nconst Admin = {\n    createProduct: (product: any) => requests.postForm('products', createFormData(product)),\n    updateProduct: (product: any) => requests.putForm('products', createFormData(product)),\n    deleteProduct: (id: number) => requests.delete(`products/${id}`)\n}\n\nconst Catalog = {\n    list: (params: URLSearchParams) => requests.get('products', params),\n    details: (id: number) => requests.get(`products/${id}`),\n    fetchFilters: () => requests.get('products/filters')\n}\n\nconst TestErrors = {\n    get400Error: () => requests.get('buggy/bad-request'),\n    get401Error: () => requests.get('buggy/not-found'),\n    get404Error: () => requests.get('buggy/not-found'),\n    get500Error: () => requests.get('buggy/server-error'),\n    getValidationError: () => requests.get('buggy/validation-error')\n}\n\nconst Basket = {\n    get: () => requests.get('basket'),\n    addItem: (productId: number, quantity: number = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\n    deleteItem: (productId: number, quantity: number = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\n}\n\nconst Account = {\n    login: (values: any) => requests.post('account/login', values),\n    register: (values: any) => requests.post('account/register', values),\n    currentUser: () => requests.get('account/currentUser'),\n    fetchAddress: () => requests.get('account/savedAddress')\n}\n\nconst Orders = {\n    list: () => requests.get('orders'),\n    fetch: (id: number) => requests.get(`orders/${id}`),\n    create: (data: any) => requests.post('orders', data)\n\n}\n\nconst Payments = {\n    createPaymentIntent: () => requests.post('payments', {})\n}\n\nconst agent = {\n    Catalog,\n    TestErrors,\n    Basket,\n    Account,\n    Orders,\n    Payments,\n    Admin\n}\n\nexport default agent;","\nexport function getCookie(key: string) {\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n    return b ? b.pop() : \"\";\n  }\n\nexport function currencyFormat(price: number) {\n    return '$' + (price/100).toFixed(2)\n}\n\n","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { Basket } from \"../../app/models/baskets\";\nimport { getCookie } from \"../../app/util/util\";\n\ninterface BasketState {\n    basket: Basket | null;\n    status: string;\n}\n\nconst initialState: BasketState = {\n    basket: null,\n    status: 'idle'\n}\n\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\n    'basket/fetchBasket',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Basket.get()\n        } catch (err: any) {\n            return thunkAPI.rejectWithValue({ error: err.data })\n\n        }\n    },\n    {\n        condition: () => {\n            if (!getCookie('buyerId')) return false\n        }\n    }\n)\n\nexport const addBasketItemAsync = createAsyncThunk<Basket, { productId: number, quantity?: number }>(\n    'basket/addBasketItemAsync',\n    async ({ productId, quantity = 1 }, thunkAPI) => {\n        try {\n            return await agent.Basket.addItem(productId, quantity)\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const removeBasketItemAsync = createAsyncThunk<void, { productId: number, quantity?: number }>(\n    'basket/removeBasketItemAsync',\n    async ({ productId, quantity = 1 }, thunkAPI) => {\n        try {\n            return await agent.Basket.deleteItem(productId, quantity)\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState,\n    reducers: {\n        setBasket: (state: { basket: any; }, action: { payload: any; }) => {\n            state.basket = action.payload\n        },\n        clearBasket: (state: any) => {\n            state.basket = null\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\n\n        });\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId\n        });\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n            const { productId, quantity } = action.meta.arg\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId)\n\n            if (itemIndex === -1 || itemIndex === undefined) return;\n\n\n            state.basket!.items[itemIndex].quantity -= quantity!\n\n            if (state.basket!.items[itemIndex!].quantity === 0) {\n                state.basket?.items.splice(itemIndex, 1)\n            }\n            state.status = 'idle'\n        });\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\n            console.log(action.payload)\n            state.status = 'idle'\n        })\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\n            state.basket = action.payload\n            state.status = 'idle'\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\n            console.log(action.payload)\n            state.status = 'idle'\n        });\n    }\n\n})\n\nexport const { setBasket, clearBasket } = basketSlice.actions","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { MetaData } from \"../../app/models/pagination\";\nimport { Product, ProductParams } from \"../../app/models/product\";\nimport { RootState } from \"../../app/store/configureStore\";\n\ninterface CatalogState {\n    productsLoaded: boolean;\n    filtersLoaded: boolean;\n    status: string;\n    brands: string[];\n    types: string[];\n    productParams: ProductParams;\n    metaData: MetaData | null;\n}\n\nconst productsAdaptor = createEntityAdapter<Product>()\n\nfunction getAxiosParams(productParams: ProductParams) {\n    const params = new URLSearchParams();\n    params.append('pageNumber', productParams.pageNumber.toString());\n    params.append('pageSize', productParams.pageSize.toString());\n    params.append('orderBy', productParams.orderBy);\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\n\n    return params;\n}\n\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, { state: RootState }>(\n    'catalog/fetchProductsAsync',\n    async (_, thunkAPI) => {\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams)\n        try {\n            const response = await agent.Catalog.list(params);\n            console.log('metadata', response.metaData)\n            thunkAPI.dispatch(setMetaData(response.metaData))\n            return response.items;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\n    'catalog/fetchProductAsync',\n    async (productId, thunkAPI) => {\n        try {\n            return await agent.Catalog.details(productId);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const fetchFilters = createAsyncThunk(\n    'catalog/fetchFilters',\n    async (_, thunkAPI) => {\n        try {\n            return agent.Catalog.fetchFilters();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nfunction initParams() {\n    return {\n        pageNumber: 1,\n        pageSize: 6,\n        orderBy: 'name',\n        brands: [],\n        types: []\n    }\n}\n\nexport const catalogSlice = createSlice({\n    name: 'catalog',\n    initialState: productsAdaptor.getInitialState<CatalogState>({\n        productsLoaded: false,\n        filtersLoaded: false,\n        status: 'idle',\n        brands: [],\n        types: [],\n        productParams: initParams(),\n        metaData: null\n    }),\n    reducers: {\n        setProductParams: (state: any, action: any) => {\n\n            state.productsLoaded = false;\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1 }\n\n        },\n        setPageNumber: (state: any, action: any) => {\n            state.productsLoaded = false\n            state.productParams = { ...state.productParams, ...action.payload }\n        },\n        setMetaData: (state: any, action: any) => {\n            state.metaData = action.payload\n        },\n        resetProductParams: (state: any) => {\n            state.productParams = initParams();\n        },\n        setProduct: (state: any, action: any) => {\n            productsAdaptor.upsertOne(state, action.payload)\n            state.productsLoaded = false\n        },\n        removeProduct: (state: any, action: any) => {\n            productsAdaptor.removeOne(state, action.payload)\n            state.productsLoaded = false\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchProductsAsync.pending, (state) => {\n            state.status = 'pendingFetchProducts'\n        });\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\n            productsAdaptor.setAll(state, action.payload)\n            state.status = 'idle'\n            state.productsLoaded = true\n        });\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\n            console.log(action.payload)\n            state.status = 'idle'\n        });\n        builder.addCase(fetchProductAsync.pending, (state) => {\n            state.status = 'pendingFetchProduct'\n        });\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\n            productsAdaptor.upsertOne(state, action.payload)\n            state.status = 'idle'\n        });\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\n\n            state.status = 'idle'\n        });\n        builder.addCase(fetchFilters.pending, (state) => {\n            state.status = 'pendingFetchFilters'\n        });\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\n            state.brands = action.payload.brands\n            state.types = action.payload.types\n            state.filtersLoaded = true\n            state.status = 'idle'\n        });\n        builder.addCase(fetchFilters.rejected, (state, action) => {\n\n            state.status = 'idle'\n        })\n    })\n})\n\nexport const productSelectors = productsAdaptor.getSelectors((state: RootState) => state.catalog);\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber, setProduct, removeProduct } = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport interface CounterState {\n    data: number;\n    title: string;\n}\n\nconst initialState: CounterState = {\n    data: 42,\n    title: 'Check out this counter that uses Redux Toolkit!'\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state, action) => {\n            state.data += action.payload\n        },\n        decrement: (state, action) => {\n            state.data -= action.payload\n        },\n        reset: (state, action) => {\n            state.data = 0\n        }\n    }\n})\n\nexport const {increment, decrement, reset} = counterSlice.actions","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { FieldValues } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\n\nimport agent from \"../../app/api/agent\";\nimport { User } from \"../../app/models/user\";\nimport { setBasket } from \"../basket/basketSlice\";\n\ninterface AccountState {\n    user: User | null;\n\n}\n\nconst initialState: AccountState = {\n    user: null\n}\n\nexport const signInUser = createAsyncThunk<User, FieldValues, {}>(\n    'account/signInUser',\n    async (data, thunkApi) => {\n        try {\n            //console.log('signInUser async Thunk', data)\n            const userDto: any = await agent.Account.login(data)\n            //This trick in destructuring allows use to break off basket its own object,\n            //and then everything else from userDto into another object called user\n            const { basket, ...user } = userDto;\n            if (basket) {\n                thunkApi.dispatch(setBasket(basket))\n            }\n            localStorage.setItem('user', JSON.stringify(user))\n\n            return user\n        } catch (error: any) {\n            return thunkApi.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\n\nexport const fetchCurrentUser = createAsyncThunk(\n    'account/currentUser',\n    async (_, thunkApi) => {\n        thunkApi.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\n        try {\n            const userDto = await agent.Account.currentUser()\n            const { basket, ...user } = userDto;\n            if (basket) {\n                thunkApi.dispatch(setBasket(basket))\n            }\n            localStorage.setItem('user', JSON.stringify(user))\n            return user\n        } catch (error: any) {\n            return thunkApi.rejectWithValue({ error: error.data })\n        }\n    },\n    {\n        //function that returns true/false that will determine if we execute the payload creator\n        //True = execute, False = do not execute\n        condition: () => {\n            if (!localStorage.getItem('user')) return false\n        }\n    }\n)\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState: initialState,\n    reducers: {\n        signOut: (state: any) => {\n            console.log('logging out user')\n            state.user = null;\n            console.log('state.user: ', state.user)\n            localStorage.removeItem('user')\n            history.push('/')\n        },\n        setUser: (state: any, action: any) => {\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]))\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\n            state.user = { ...action.payload, roles: typeof (roles) === 'string' ? [roles] : roles }\n        }\n    },\n\n    extraReducers: (builder) => {\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\n            state.user = null;\n            localStorage.removeItem('user')\n            toast.error('Session expired. Please login again.')\n            history.push('/')\n        })\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state: any, action) => {\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]))\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']\n            state.user = { ...action.payload, roles: typeof (roles) === 'string' ? [roles] : roles }\n\n        })\n        builder.addMatcher(isAnyOf(signInUser.rejected, fetchCurrentUser.rejected), (state: any, action) => {\n            throw action.payload\n        })\n    }\n\n})\n\nexport const { signOut, setUser } = accountSlice.actions","import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { basketSlice } from '../../features/basket/basketSlice';\nimport { catalogSlice } from '../../features/catalog/catalogSlice';\nimport { counterSlice } from '../../features/contact/counterSlice';\nimport { accountSlice } from '../../features/account/accountSlice';\n\nexport const store = configureStore({\n    reducer: {\n        counter: counterSlice.reducer,\n        basket: basketSlice.reducer,\n        catalog: catalogSlice.reducer,\n        account: accountSlice.reducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { Button, Menu, Fade, MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signOut } from \"../../features/account/accountSlice\";\nimport { clearBasket } from \"../../features/basket/basketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\n\nexport default function SignedInMenu() {\n\n    const dispatch = useAppDispatch()\n    const { user } = useAppSelector(state => state.account)\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <Button\n                color='inherit'\n                onClick={handleClick}\n                sx={{ typography: 'h6' }}\n            >\n                {user?.email}\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem component={Link} to='/orders'>My Orders</MenuItem>\n                <MenuItem onClick={() => {\n                    dispatch(signOut())\n                    dispatch(clearBasket())\n                }}>Logout</MenuItem>\n            </Menu>\n        </>\n    );\n}","import { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@material-ui/core\";\nimport { ShoppingCart } from \"@material-ui/icons\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport { useAppSelector } from \"../store/configureStore\";\nimport SignedInMenu from \"./SignedInMenu\";\n\n\n\ninterface Props {\n    handleToggleDarkMode: () => void;\n}\n\nconst midLinks = [\n    { title: 'catalog', path: '/catalog' },\n    { title: 'about', path: '/about' },\n    { title: 'contact', path: '/contact' }\n]\n\nconst rightLinks = [\n    { title: 'login', path: '/login' },\n    { title: 'register', path: '/register' }\n]\n\nconst navStyles = {\n    color: 'inherit',\n    textDecoration: 'none',\n    typography: 'h6',\n    '&:hover': {\n        color: 'grey.500'\n    },\n    '&.active': {\n        color: 'text.secondary'\n    }\n}\n\nexport default function Header({ handleToggleDarkMode }: Props) {\n\n    const { basket } = useAppSelector(state => state.basket);\n    const { user } = useAppSelector(state => state.account);\n\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0)\n\n    return (\n        <AppBar position='static' >\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Box display='flex' alignItems='center'>\n                    <Typography variant='h6' component={NavLink} to='/' sx={navStyles} exact>\n                        ReStore\n                    </Typography>\n                    <Switch color='default' onChange={handleToggleDarkMode} />\n                </Box>\n\n\n\n                <List sx={{ display: 'flex' }}>\n                    {midLinks.map(({ title, path }) => (\n                        <ListItem\n                            component={NavLink}\n                            to={path}\n                            key={path}\n                            sx={navStyles}\n                        >\n                            {title.toUpperCase()}\n                        </ListItem>\n                    ))}\n                    {user && user.roles?.includes('Admin') &&\n                        <ListItem\n                            component={NavLink}\n                            to={'/inventory'}\n                            sx={navStyles}\n                        >\n                            INVENTORY\n                        </ListItem>\n                    }\n                </List>\n\n                <Box display='flex' alignItems='center'>\n\n                    {user ? (\n                        <>\n                            <IconButton size='large' sx={{ color: 'inherit' }} component={Link} to=\"/basket\">\n                                <Badge badgeContent={itemCount} color='secondary'>\n                                    <ShoppingCart />\n                                </Badge>\n                            </IconButton>\n                            <   SignedInMenu />\n                        </>\n                    ) : (\n                        <List sx={{ display: 'flex' }}>\n                            {rightLinks.map(({ title, path }) => (\n                                <ListItem\n                                    component={NavLink}\n                                    to={path}\n                                    key={path}\n                                    sx={navStyles}\n                                >\n                                    {title.toUpperCase()}\n                                </ListItem>\n                            ))}\n                        </List>\n                    )\n                    }\n\n                </Box>\n\n\n\n            </Toolbar>\n        </AppBar>\n    )\n}","import { Box, Typography } from \"@material-ui/core\";\nimport Slider from \"react-slick\";\n\nexport default function HomePage() {\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n    };\n\n    return (\n        <>\n            <Slider {...settings}>\n                <div>\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 400 }} />\n                </div>\n                <div>\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 300 }} />\n                </div>\n                <div>\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{ display: 'block', width: '100%', maxHeight: 400 }} />\n                </div>\n            </Slider>\n            <Box display='flex' justifyContent=\"center\" sx={{ p: 4 }}>\n                <Typography variant='h1'>\n                    Welcome to the ReStore!\n                </Typography>\n            </Box>\n        </>\n    )\n}","import { Checkbox, FormControlLabel, FormGroup } from \"@material-ui/core\"\nimport { useState } from \"react\";\n\ninterface Props {\n    items: string[];\n    checked?: string[]\n    onChange: (items: string[]) => void;\n\n}\n\nexport default function CheckboxButtons({ items, onChange, checked }: Props) {\n\n    const [checkedItems, setCheckedItems] = useState(checked || [])\n\n\n\n    function handleChecked(value: string) {\n        console.log('handleChecked value', value)\n        const currentIndex = checkedItems.findIndex(item => item === value);\n        console.log('currentIndex', currentIndex)\n        let newCheckedItems: string[] = []\n        if (currentIndex === -1) newCheckedItems = [...checkedItems, value]\n\n        else newCheckedItems = checkedItems.filter(item => item !== value)\n\n\n        console.log('newCheckedItems', newCheckedItems)\n\n        setCheckedItems(newCheckedItems)\n        onChange(newCheckedItems)\n    }\n\n    return (\n        <FormGroup\n\n        >\n            {items.map(item => {\n                return <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={checkedItems.indexOf(item) !== -1}\n                            onClick={() => handleChecked(item)}\n                        />}\n                    label={item}\n                    key={item} />\n            })}\n        </FormGroup>\n    )\n}\n","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@material-ui/core\"\n\n\ninterface Props {\n    options: any[];\n    onChange: (event: any) => void;\n    selectedValue: string;\n}\n\nexport default function RadioButtonGroup({ options, onChange, selectedValue }: Props) {\n\n\n\n    return (\n        <FormControl>\n            <RadioGroup\n                onChange={onChange}\n                value={selectedValue}\n            >\n                {options.map(({ value, label }) => {\n                    return <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\n                })}\n            </RadioGroup>\n        </FormControl>\n    )\n}","import { Backdrop, CircularProgress, Typography, Box } from \"@material-ui/core\";\n\n\ninterface Props {\n    message?: string\n}\n\n\nexport default function LoadingComponent({message = \"loading...\"}: Props) {\n    return (\n        <Backdrop open={true} invisible={true}>\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\n                <CircularProgress size={100} color='secondary'/>\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}> \n                    {message}\n                </Typography>\n            </Box>\n        </Backdrop>\n    )\n}","import { Box, Typography, Pagination } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { setPageNumber } from \"../../features/catalog/catalogSlice\";\nimport LoadingComponent from \"../layout/LoadingComponent\";\nimport { MetaData } from \"../models/pagination\";\n\n\ninterface Props {\n    metaData: MetaData;\n    onPageChange: (page: number) => void\n}\n\nexport default function AppPagination({ metaData, onPageChange }: Props) {\n\n    const { currentPage, totalPages, totalCount, pageSize } = metaData\n    const [pageNumber, setPageNumber] = useState(currentPage)\n\n\n    function handlePageChange(page: number) {\n        setPageNumber(page)\n        onPageChange(page)\n    }\n\n    if (!metaData) {\n        return (\n            <LoadingComponent message=\"Loading the Catalog\" />\n        )\n    }\n\n    return (\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n            <Typography>\n                Displaying {(currentPage - 1) * pageSize + 1} - {currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize} of {totalCount} items\n            </Typography>\n            <Pagination\n                color='secondary'\n                size=\"small\"\n                count={totalPages}\n                page={pageNumber}\n                onChange={(e, page) => handlePageChange(page)}\n            />\n        </Box>\n    )\n}","import { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@material-ui/core\";\n\nimport { LoadingButton } from \"@material-ui/lab\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Product } from \"../../app/models/product\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\n\ninterface Props {\n  product: Product\n}\n\nexport default function ProductCard({ product }: Props) {\n\n  const { status } = useAppSelector(state => state.basket)\n  const dispatch = useAppDispatch()\n\n\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: 'secondary.main' }}>\n            {product.name.charAt(0).toUpperCase()}\n          </Avatar>\n        }\n        title={product.name}\n        titleTypographyProps={{\n          sx: { fontWeight: 'bold', color: 'secondary.main' }\n        }}\n      />\n      <CardMedia\n        sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\n        image={product.pictureUrl}\n        title={product.name}\n      />\n      <CardContent>\n        <Typography gutterBottom color='secondary' variant=\"h5\" >\n          ${(product.price / 100).toFixed(2)}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {product.brand} / {product.type}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LoadingButton loading={status.includes('pendingAddItem' + product.id + '*')} onClick={() => dispatch(addBasketItemAsync({ productId: product.id }))} size=\"small\">Add to cart</LoadingButton>\n        <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\n      </CardActions>\n    </Card>\n  )\n}","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Grid,\n    Skeleton\n} from \"@material-ui/core\";\n\nexport default function ProductCardSkeleton() {\n    return (\n        <Grid item xs component={Card}>\n            <CardHeader\n                avatar={\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n                }\n                title={\n                    <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                    />\n                }\n            />\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\n            <CardContent>\n                <>\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </>\n            </CardContent>\n            <CardActions>\n                <>\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\n                </>\n            </CardActions>\n        </Grid>\n    )\n}","import { Grid } from \"@material-ui/core\"\nimport { Product } from \"../../app/models/product\"\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport ProductCard from \"./ProductCard\";\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\n\ninterface Props {\n    products: Product[];\n}\n\nexport default function ProductList({ products }: Props) {\n\n    const { productsLoaded } = useAppSelector(state => state.catalog)\n\n    return (\n        <Grid container spacing={4}>\n            {products.map(product => (\n                <Grid item xs={4} key={product.id} >\n                    {!productsLoaded ? (\n                        <ProductCardSkeleton />\n                    ) : (\n                        <ProductCard product={product} />\n                    )}\n\n                </Grid>\n\n            ))}\n\n\n        </Grid>\n    )\n}","import { debounce, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setProductParams } from \"./catalogSlice\";\n\nexport default function ProductSearch() {\n\n    const { productParams } = useAppSelector(state => state.catalog)\n    const dispatch = useAppDispatch();\n\n    const [searchText, setSearchText] = useState(productParams.searchTerm)\n\n\n    const debouncedSearch = debounce((event: any) => {\n        dispatch(setProductParams({ searchTerm: event.target.value }))\n    }, 1000)\n\n\n\n    return (\n        <TextField\n            label='Search Products'\n            variant='outlined'\n            fullWidth\n            value={searchText || ''}\n            onChange={(event: any) => {\n                setSearchText(event.target.value)\n                debouncedSearch(event)\n            }}\n        />\n    )\n}","import { useEffect } from \"react\"\nimport { productSelectors, fetchProductsAsync, fetchFilters } from \"../../features/catalog/catalogSlice\"\nimport { useAppSelector, useAppDispatch } from \"../store/configureStore\"\n\nexport default function useProducts() {\n    const products = useAppSelector(productSelectors.selectAll)\n    const { productsLoaded, filtersLoaded, brands, types, metaData } = useAppSelector(state => state.catalog)\n    const dispatch = useAppDispatch()\n\n\n    useEffect(() => {\n        if (!productsLoaded) dispatch(fetchProductsAsync())\n\n    }, [productsLoaded, dispatch])\n\n    useEffect(() => {\n        if (!filtersLoaded) dispatch(fetchFilters())\n\n    }, [filtersLoaded, dispatch])\n\n\n    return {\n        products,\n        productsLoaded,\n        filtersLoaded,\n        brands,\n        types,\n        metaData\n    }\n\n}","\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\nimport AppPagination from \"../../app/components/AppPagination\";\n\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\nimport ProductList from \"./ProductList\";\nimport ProductSearch from \"./ProductSearch\";\nimport useProducts from \"../../app/hooks/useProducts\";\n\n\nconst sortOptions = [\n  { value: 'name', label: 'Alphabetical' },\n  { value: 'priceDesc', label: 'Price - High to Low' },\n  { value: 'price', label: 'Price - Low to High' }\n]\n\n\n\nexport default function Catalog() {\n  const { products, brands, types, filtersLoaded, metaData } = useProducts()\n  const { productParams } = useAppSelector(state => state.catalog)\n  const dispatch = useAppDispatch()\n\n  if (!filtersLoaded) {\n    return (\n      <LoadingComponent message=\"Loading the Catalog\" />\n    )\n  }\n\n\n  return (\n    <Grid container columnSpacing={4}>\n      <Grid item xs={3}>\n        <Paper sx={{ mb: 2 }}>\n          <ProductSearch />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <RadioButtonGroup\n            selectedValue={productParams.orderBy}\n            onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\n            options={sortOptions}\n          />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <CheckboxButtons\n            items={brands}\n            checked={productParams.brands}\n            onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\n          />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <CheckboxButtons\n            items={types}\n            checked={productParams.types}\n            onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={9}>\n        <ProductList products={products} />\n      </Grid>\n      <Grid item xs={3} />\n      <Grid item xs={9} sx={{ mb: 2 }}>\n        {metaData &&\n          <AppPagination\n            onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\n            metaData={metaData}\n          />}\n      </Grid>\n    </Grid>\n  )\n}","import { Button, Container, Divider, Paper, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default function NotFound() {\n\n    return (\n        <Container component={Paper} sx={{height:400}}>\n            <Typography gutterBottom variant='h3'>\n                Oops... We couldn't find the page you are looking for!\n            </Typography>\n            <Divider />\n            <Button fullWidth component={Link} to='/catalog'> Return to Store </Button>\n        </Container>\n    )\n}","import { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, Typography } from \"@material-ui/core\";\nimport { LoadingButton } from \"@material-ui/lab\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport NotFound from \"../../app/errors/NotFound\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\n\nexport default function ProductDetails() {\n\n    const { status } = useAppSelector(state => state.basket)\n    const { id } = useParams<{ id: string }>();\n    const product = useAppSelector(state => productSelectors.selectById(state, id))\n    const { status: productStatus } = useAppSelector(state => state.catalog)\n    const [buttonLoading, setButtonLoading] = useState(false)\n\n\n\n    const dispatch = useAppDispatch()\n\n    function handleAddItem(productId: number) {\n        setButtonLoading(true);\n\n        dispatch(addBasketItemAsync({ productId, quantity: 1 }))\n    }\n\n    useEffect(() => {\n        if (!product) dispatch(fetchProductAsync(parseInt(id)))\n    }, [id, dispatch, product])\n\n    if (productStatus.includes('pending')) return <LoadingComponent message=\"Loading Product...\" />\n\n    if (!product) return <NotFound />\n\n    return (\n        <Grid container spacing={6}>\n            <Grid item xs={6}>\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant='h4'>{product.name}</Typography>\n                <Divider sx={{ mb: 2 }} />\n                <Typography variant='h4' color='secondary'>${(product.price / 100).toFixed(2)}</Typography>\n                <TableContainer>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>{product.name}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Description</TableCell>\n                                <TableCell>{product.description}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Brand</TableCell>\n                                <TableCell>{product.brand}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>Type</TableCell>\n                                <TableCell>{product.type}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell>In Stock</TableCell>\n                                <TableCell>{product.quantityInStock}</TableCell>\n                            </TableRow>\n\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <LoadingButton\n                    loading={status.includes('pending')}\n                    variant='contained'\n                    size='small'\n                    sx={{ marginTop: 5 }}\n                    onClick={() => handleAddItem(parseInt(id))}>\n                    Add to Cart\n                </LoadingButton>\n            </Grid>\n        </Grid>\n    )\n}","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport agent from \"../../app/api/agent\";\n\nexport default function AboutPage() {\n\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n    function getVaidationError() {\n        agent.TestErrors.getValidationError()\n            .then(() => console.log('we should never see this'))\n            .catch((error) => {\n                setValidationErrors(error)\n            })\n\n\n\n\n    }\n\n    return (\n        <Container>\n            <Typography gutterBottom variant='h2'>\n                Errors for testing purposes\n            </Typography>\n            <ButtonGroup fullWidth>\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\n                <Button variant='contained' onClick={getVaidationError}>Test Validation Error</Button>\n            </ButtonGroup>\n            {validationErrors.length > 0 &&\n                <Alert severity='error'>\n                    <AlertTitle>Validation Errors</AlertTitle>\n                    <List>\n                        {validationErrors.map((error) => {\n                            return (<ListItem key={error}>\n                                <ListItemText>\n                                    {error}\n                                </ListItemText>\n                            </ListItem>\n                            )\n                        })}\n                    </List>\n                </Alert>\n            }\n        </Container>\n    )\n}","import { Button, ButtonGroup, Typography } from \"@material-ui/core\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { increment, decrement, reset } from \"./counterSlice\";\n\nexport default function ContactPage() {\n\n    const dispatch = useAppDispatch()\n\n    const {data, title} = useAppSelector(state => state.counter)\n\n    return (\n        <>\n            <Typography variant='h2'>\n                {title}\n            </Typography>\n            <Typography variant='h5'>\n                The data is: {data}\n            </Typography>\n            <ButtonGroup>\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increase</Button>\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrease</Button>\n                <Button onClick={() => dispatch(reset(0))} variant='contained' color='secondary'>Reset</Button>\n            </ButtonGroup>\n        </>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@material-ui/core\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport default function ServerError() {\n\n    const history = useHistory()\n    const {state} = useLocation<any>()\n\n    return(\n        <Container component={Paper}>\n            {state?.error ? (\n                <>\n                <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\n                    <Divider />\n                <Typography>{state.error.detail || 'Internal Server Error'}</Typography>\n                </>\n            ) : (\n                <Typography variant='h5' gutterBottom>No Errors Here!</Typography>\n            ) }\n            <Button onClick={() => history.push('/catalog')}>Return to Store</Button>\n        </Container>\n    )\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@material-ui/core\";\n\n\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\n\ninterface Props {\n    providedSubtotal?: number\n}\n\nexport default function BasketSummary({ providedSubtotal }: Props) {\n\n    const { basket } = useAppSelector(state => state.basket)\n\n    function calculateSubtotal() {\n        if (!basket) return 0\n        if (providedSubtotal === undefined) {\n            const calculatedSubtotal = basket?.items.reduce((sum, item) => {\n                return sum + (item.price * item.quantity)\n            }, 0)\n\n            return calculatedSubtotal\n        }\n        return providedSubtotal\n\n    }\n\n    function calculateDeliveryFee(sub: number) {\n        if (sub / 100 >= 100.00) {\n            return 0\n        } else {\n            return 500\n        }\n    }\n\n    const subtotal = calculateSubtotal()\n    const deliveryFee = calculateDeliveryFee(subtotal)\n\n    return (\n        <>\n            <TableContainer component={Paper} variant={'outlined'}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell colSpan={2}>Subtotal</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Total</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <span style={{ fontStyle: 'italic' }}>*Orders over $100 qualify for free delivery</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@material-ui/core\";\nimport { Remove, Add, Delete } from \"@material-ui/icons\";\nimport { LoadingButton } from \"@material-ui/lab\";\nimport { BasketItem } from \"../../app/models/baskets\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { productSelectors } from \"../catalog/catalogSlice\";\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\n\ninterface Props {\n    items: BasketItem[] | undefined;\n    isBasket?: boolean;\n}\n\nexport default function BasketTable({ items, isBasket = true }: Props) {\n\n    const { status } = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch()\n\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Product</TableCell>\n                        <TableCell align=\"right\">Price</TableCell>\n                        <TableCell align=\"center\">Quantity</TableCell>\n                        <TableCell align=\"right\">SubTotal</TableCell>\n                        {isBasket && <><TableCell align=\"right\"></TableCell></>}\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {items?.map((item) => (\n                        <TableRow\n                            key={item.productId}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Box display='flex' alignItems='center'>\n                                    <img src={item.pictureUrl} alt={item.nameOfProduct} style={{ height: 50, marginRight: 20 }} />\n                                    <span>{item.nameOfProduct}</span>\n                                </Box>\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat(item.price)}</TableCell>\n                            <TableCell align=\"center\">\n                                {isBasket && <><LoadingButton\n                                    color='error'\n                                    loading={status.includes('pendingRemoveItem' + item.productId + '*')}\n                                    onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1 }))}>\n                                    <Remove />\n                                </LoadingButton> </>}\n                                {item.quantity}\n                                {isBasket && <><LoadingButton\n                                    color='secondary'\n                                    loading={status.includes('pendingAddItem' + item.productId + '*')}\n                                    onClick={() => dispatch(addBasketItemAsync({ productId: item.productId, quantity: 1 }))}>\n                                    <Add />\n                                </LoadingButton> </>}\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat((item.price * item.quantity))}</TableCell>\n                            {isBasket && <TableCell align=\"right\">\n                                <LoadingButton\n                                    color='primary'\n                                    loading={false}\n                                    onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity }))}>\n                                    <Delete />\n                                </LoadingButton>\n                            </TableCell>}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}","import { Button, Grid, Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport BasketSummary from \"./BasketSummary\";\nimport BasketTable from \"./BasketTable\";\n\n\n\nexport default function BasketPage() {\n\n    const { basket } = useAppSelector(state => state.basket);\n    //const dispatch = useAppDispatch()\n\n\n\n\n    if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\n    return (\n        <>\n            <BasketTable items={basket.items} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary />\n                    <Button\n                        fullWidth\n                        size='large'\n                        variant='contained'\n                        component={Link}\n                        to='/checkout'\n                    >\n                        Checkout\n                    </Button>\n                </Grid>\n\n            </Grid>\n        </>\n    )\n}","\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Avatar, Box, Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport Container from '@material-ui/core/Container'\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom'\n\nimport { FieldValues, useForm } from 'react-hook-form';\nimport { LoadingButton } from '@material-ui/lab';\nimport { useAppDispatch } from '../../app/store/configureStore';\n\nimport { signInUser } from './accountSlice';\n\n\n\nconst theme = createTheme();\n\nexport default function Login() {\n\n    const history = useHistory()\n    const location = useLocation<any>()\n    const dispatch = useAppDispatch()\n\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    })\n\n    async function submitForm(data: FieldValues) {\n        try {\n            await dispatch(signInUser(data))\n\n            history.push('/catalog')\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Username\"\n                        autoFocus\n                        {...register('username', { required: 'Username is required' })}\n                        error={!!errors.username}\n                        helperText={errors?.username?.message}\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        {...register('password', { required: 'password is required' })}\n                        error={!!errors.password}\n                        helperText={errors?.password?.message}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <LoadingButton\n                        loading={isSubmitting}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        disabled={!isValid}\n                    >\n                        Sign In\n                    </LoadingButton>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/register\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n\n            </Container>\n        </ThemeProvider>\n    );\n}","\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Avatar, Box, Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport Container from '@material-ui/core/Container'\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom'\n\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@material-ui/lab';\n\n\n\nimport agent from '../../app/api/agent';\nimport { toast } from 'react-toastify';\n\n\n\n\nconst theme = createTheme();\n\nexport default function Register() {\n\n    const history = useHistory()\n\n\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    })\n\n    function handleApiErrors(errors: any) {\n        console.log(errors)\n\n        if (errors) {\n            errors.forEach((error: string) => {\n                if (error.includes('Password')) {\n                    setError('password', { message: error })\n                } else if (error.includes('Email')) {\n                    setError('Email', { message: error })\n                } else if (error.includes('Username')) {\n                    setError('username', { message: error })\n                }\n            });\n        }\n    }\n\n\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n\n                <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Register\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        agent.Account.register(data)\n                            .then(() => {\n                                toast.success('Registration successful! You can now log in')\n                                history.push('/login')\n                            })\n                            .catch(error => handleApiErrors(error))\n                    })}\n                    noValidate sx={{ mt: 1 }}\n                >\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Username\"\n                        autoFocus\n                        {...register('username', { required: 'Username is required' })}\n                        error={!!errors.username}\n                        helperText={errors?.username?.message}\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Email\"\n                        {...register('email', {\n                            required: 'Email is required',\n                            pattern: {\n                                value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n                                message: 'Not a valid email address'\n                            }\n                        })}\n                        error={!!errors.email}\n                        helperText={errors?.email?.message}\n                    />\n                    <TextField\n                        margin=\"normal\"\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        {...register('password', {\n                            required: 'password is required',\n                            pattern: {\n                                value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\n                                message: 'Password does not meet complexity requirements'\n                            }\n                        })}\n                        error={!!errors.password}\n                        helperText={errors?.password?.message}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n\n\n                    <LoadingButton\n                        loading={isSubmitting}\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        disabled={!isValid}\n                    >\n                        Register\n                    </LoadingButton>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/login\">\n                                {\"Already have an account? Sign In\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Box>\n\n            </Container>\n        </ThemeProvider>\n    );\n}","// A wrapper for <Route> that redirects to the login\n\nimport { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useAppSelector } from \"../store/configureStore\";\n\ninterface Props extends RouteProps {\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\n    roles?: string[];\n}\n\n// screen if you're not yet authenticated.\nexport default function PrivateRoute({ component: Component, roles, ...rest }: Props) {\n    const { user } = useAppSelector(state => state.account)\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!user) {\n                    return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n                }\n\n                if (roles ?? !roles!.some((r: any) => user.roles?.includes(r))) {\n                    toast.error('Not authorized to access this area.')\n                    return <Redirect to={{ pathname: \"/catalog\" }} />\n                }\n\n                return (\n                    <Component {...props} />\n                )\n            }}\n        />\n    );\n}","import { Box, Button, Grid, Typography } from \"@material-ui/core\";\nimport { BasketItem } from \"../../app/models/baskets\";\nimport { Order } from \"../../app/models/order\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\ninterface Props {\n    order: Order;\n    setSelectedOrder: (id: number) => void;\n}\n\nexport default function OrderDetails({ order, setSelectedOrder }: Props) {\n\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n\n    return (\n        <>\n            <Box>\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order #{order.id} - {order.orderStatus}</Typography>\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to Orders</Button>\n            </Box>\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary providedSubtotal={subtotal} />\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Order } from \"../../app/models/order\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport OrderDetails from \"./OrderDetails\";\n\nexport default function Orders() {\n\n    const [orders, setOrders] = useState<Order[] | null>(null)\n    const [loading, setLoading] = useState(true)\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0)\n\n    useEffect(() => {\n        agent.Orders.list()\n            .then(orders => setOrders(orders))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false))\n    }, [])\n\n    if (loading) return <LoadingComponent message=\"Loading Orders Page\" />\n\n    if (selectedOrderNumber > 0) {\n        return (\n            <OrderDetails\n                order={orders?.find(o => o.id === selectedOrderNumber)!}\n                setSelectedOrder={setSelectedOrderNumber}\n            />\n        )\n    }\n\n    return (\n\n\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Order Number</TableCell>\n                        <TableCell align=\"right\">Total</TableCell>\n                        <TableCell align=\"right\">Order Date</TableCell>\n                        <TableCell align=\"right\">Order Status</TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orders?.map((order) => (\n                        <TableRow\n                            key={order.id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {order.id}\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\n                            <TableCell align=\"right\">\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>View</Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n","import { FormControlLabel, Checkbox } from \"@material-ui/core\";\n\n\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    disabled: boolean;\n}\n\nexport default function AppCheckbox(props: Props) {\n\n    const { field } = useController({ ...props, defaultValue: false })\n\n    return (\n        <FormControlLabel\n            control={\n                <Checkbox\n                    {...field}\n                    checked={field.value}\n                    color='secondary'\n                    disabled={props.disabled}\n                />\n            }\n            label={props.label}\n\n        />\n    )\n}","import { TextField } from \"@material-ui/core\";\n\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    multiline?: boolean;\n    rows?: number;\n    type?: string;\n}\n\nexport default function AppTextInput(props: Props) {\n\n    const { fieldState, field } = useController({ ...props, defaultValue: '' })\n\n    return (\n        <TextField\n            {...props}\n            {...field}\n            fullWidth\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n            multiline={props.multiline}\n            rows={props.rows}\n            type={props.type}\n        />\n\n\n    )\n}","import { Typography, Grid } from \"@material-ui/core\";\nimport { useFormContext } from \"react-hook-form\";\nimport AppCheckbox from \"../../app/components/AppCheckbox\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\n\nexport default function AddressForm() {\n\n    const { control, formState } = useFormContext();\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                Shipping address\n            </Typography>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12}>\n                    <AppTextInput\n                        control={control}\n                        name='fullName'\n                        label='Full Name'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput\n                        control={control}\n                        name='address1'\n                        label='Address Line 1'\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput\n                        control={control}\n                        name='address2'\n                        label='Address Line 2'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput\n                        control={control}\n                        name='city'\n                        label='City'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput\n                        control={control}\n                        name='state'\n                        label='State'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput\n                        control={control}\n                        name='postCode'\n                        label='Postal Code'\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput\n                        control={control}\n                        name='country'\n                        label='Country'\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppCheckbox\n                        name='saveAddress'\n                        label='Save this as the default address'\n                        control={control}\n                        disabled={!formState.isDirty}\n                    />\n                </Grid>\n            </Grid>\n\n\n        </>\n    );\n}\n","import { InputBaseComponentProps } from \"@material-ui/core\";\nimport { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { Ref } from \"react\";\n\ninterface Props extends InputBaseComponentProps { }\n\nexport const StripeInput = forwardRef(function StripeInput({ component: Component, ...props }: Props, ref: Ref<unknown>) {\n    const elementRef = useRef<any>()\n\n    useImperativeHandle(ref, () => ({\n        focus: () => elementRef.current.focus\n    }))\n\n    return (\n        <Component\n            onReady={(element: any) => elementRef.current = element}\n            {...props}\n        />\n    )\n})","import { Typography, Grid, TextField } from \"@material-ui/core\";\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from \"@stripe/react-stripe-js\";\nimport { StripeElementType } from \"@stripe/stripe-js\";\n\nimport { useFormContext } from \"react-hook-form\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\nimport { StripeInput } from \"./StripeInput\";\n\ninterface Props {\n    cardState: { elementError: { [key in StripeElementType]?: string } };\n    onCardInputChange: (event: any) => void;\n}\n\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\n\n    const { control } = useFormContext()\n\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                Payment method\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                    <AppTextInput name=\"nameOnCard\" label='Name on card' control={control} />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        onChange={onCardInputChange}\n                        error={!!cardState.elementError.cardNumber}\n                        helperText={cardState.elementError.cardNumber}\n                        id=\"cardNumber\"\n                        label=\"Card number\"\n                        fullWidth\n                        autoComplete=\"cc-number\"\n                        variant=\"outlined\"\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            inputComponent: StripeInput,\n                            inputProps: {\n                                component: CardNumberElement\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        onChange={onCardInputChange}\n                        error={!!cardState.elementError.cardExpiry}\n                        helperText={cardState.elementError.cardExpiry}\n                        id=\"expDate\"\n                        label=\"Expiry date\"\n                        fullWidth\n                        autoComplete=\"cc-exp\"\n                        variant=\"outlined\"\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            inputComponent: StripeInput,\n                            inputProps: {\n                                component: CardExpiryElement\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TextField\n                        onChange={onCardInputChange}\n                        error={!!cardState.elementError.cardCvc}\n                        helperText={cardState.elementError.cardCvc}\n                        id=\"cvv\"\n                        label=\"CVV\"\n                        fullWidth\n                        autoComplete=\"cc-csc\"\n                        variant=\"outlined\"\n                        InputLabelProps={{ shrink: true }}\n                        InputProps={{\n                            inputComponent: StripeInput,\n                            inputProps: {\n                                component: CardCvcElement\n                            }\n                        }}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import { Grid, Typography } from '@material-ui/core';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport BasketSummary from '../basket/BasketSummary';\nimport BasketTable from '../basket/BasketTable';\n\n\nexport default function Review() {\n    const { basket } = useAppSelector(state => state.basket)\n    const items = basket?.items\n    console.log(basket)\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                Order summary\n            </Typography>\n            {basket &&\n                <>\n                    <BasketTable items={items} isBasket={false} />\n                </>}\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary />\n\n                </Grid>\n\n            </Grid>\n        </>\n    );\n}","import * as yup from 'yup'\n\nexport const validationSchema = [\n    yup.object({\n        fullName: yup.string().required('Full name is required'),\n        address1: yup.string().required('Address Line 1 is required'),\n        //address2: yup.string().required(),\n        city: yup.string().required(),\n        state: yup.string().required('State is required'),\n        country: yup.string().required('Country is required'),\n        postCode: yup.string().required('Postal Code is required')\n    }),\n\n    yup.object(),\n    yup.object({\n        nameOnCard: yup.string().required()\n    })\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { Field, FieldValues, FormProvider, useForm } from \"react-hook-form\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { validationSchema } from './checkoutValidation';\nimport agent from \"../../app/api/agent\";\n\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { clearBasket } from \"../basket/basketSlice\";\nimport { LoadingButton } from \"@material-ui/lab\";\nimport { StripeElementType } from \"@stripe/stripe-js\";\nimport { DH_CHECK_P_NOT_SAFE_PRIME } from \"constants\";\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\n\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\n\n\nexport default function CheckoutPage() {\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [orderNumber, setOrderNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useAppDispatch()\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} })\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false })\n    const [paymentMessage, setPaymentMessage] = useState('')\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false)\n    const { basket } = useAppSelector(state => state.basket)\n    const stripe = useStripe()\n    const elements = useElements()\n\n    function onCardInputChange(event: any) {\n        setCardState({\n            ...cardState,\n            elementError: {\n                ...cardState.elementError,\n                [event.elementType]: event.error?.message\n            }\n        }\n        )\n        setCardComplete({\n            ...cardComplete,\n            [event.elementType]: event.complete\n        })\n    }\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return <AddressForm />;\n            case 1:\n                return <Review />;\n            case 2:\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\n            default:\n                throw new Error('Unknown step');\n        }\n    }\n\n    const currentValidationSchema = validationSchema[activeStep]\n\n    const methods = useForm({\n        mode: 'all',\n        resolver: yupResolver(currentValidationSchema)\n    })\n\n    useEffect(() => {\n        agent.Account.fetchAddress()\n            .then(response => {\n                if (response) {\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\n                }\n            })\n    }, [methods])\n\n    async function submitOrder(data: FieldValues) {\n        setLoading(true)\n        const { nameOnCard, saveAddress, ...shippingAddress } = data\n        if (!stripe || !elements) return //stripe not ready\n        try {\n            const cardElement = elements.getElement(CardNumberElement)\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\n                payment_method: {\n                    card: cardElement!,\n                    billing_details: {\n                        name: nameOnCard\n                    }\n                }\n            })\n            console.log(paymentResult)\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress })\n                setOrderNumber(orderNumber)\n                setPaymentSucceeded(true)\n                setPaymentMessage('Thank you! We have received your payment!')\n                setActiveStep(activeStep + 1)\n                dispatch(clearBasket())\n                setLoading(false)\n            } else {\n                setPaymentMessage(paymentResult.error?.message!)\n                setPaymentSucceeded(false)\n                setLoading(false)\n                setActiveStep(activeStep + 1)\n            }\n        } catch (error: any) {\n            console.log(error)\n            setLoading(false)\n        }\n    }\n\n    const handleNext = async (data: FieldValues) => {\n        if (activeStep === steps.length - 1) {\n            await submitOrder(data)\n\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    function submitDisabled(): boolean {\n        if (activeStep === steps.length - 1) {\n\n            return !cardComplete.cardCvc\n                || !cardComplete.cardExpiry\n                || !cardComplete.cardNumber\n                || !methods.formState.isValid\n        } else {\n            return !methods.formState.isValid\n        }\n    }\n\n\n\n    return (\n        <FormProvider {...methods}>\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                    Checkout\n                </Typography>\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <>\n                    {activeStep === steps.length ? (\n                        <>\n                            <Typography variant=\"h5\" gutterBottom>\n                                {paymentMessage}\n                            </Typography>\n                            {paymentSucceeded ? (\n                                <Typography variant=\"subtitle1\">\n                                    Your order number is #{orderNumber}. We have emailed not your order: ;\n                                    confirmation, and will not send you an update when your order has\n                                    shipped because I already got your money, motherfucker!!\n                                </Typography>\n                            ) : (\n                                <Button variant=\"contained\" onClick={handleBack}>\n                                    Go back and try again...\n                                </Button>\n                            )}\n\n                        </>\n                    ) : (\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\n                            {getStepContent(activeStep)}\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                                {activeStep !== 0 && (\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                                        Back\n                                    </Button>\n                                )}\n                                <LoadingButton\n                                    loading={loading}\n                                    variant=\"contained\"\n                                    type='submit'\n                                    sx={{ mt: 3, ml: 1 }}\n                                    disabled={submitDisabled()}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                                </LoadingButton>\n                            </Box>\n                        </form>\n                    )}\n                </>\n            </Paper>\n        </FormProvider>\n    );\n}\n","import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setBasket } from \"../basket/basketSlice\";\nimport CheckoutPage from \"./CheckoutPage\";\n\nconst stripePromise = loadStripe(\"pk_test_51LHAWSDQSJEkNxCJI4um5NjxpsXNdfRDHnfTeERDGOfwl0iHfAlTYROqCIUeRnq585kNbAKLcNHCWeeEDecOhMcz00OWiH3BbW\")\n\nexport default function CheckoutWrapper() {\n\n    const dispatch = useAppDispatch()\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        agent.Payments.createPaymentIntent()\n            .then(basket => dispatch(setBasket(basket)))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false))\n\n\n    }, [dispatch])\n\n    if (loading) return <LoadingComponent message=\"Loading Checkout....\" />\n\n    return (\n        <Elements stripe={stripePromise}>\n            <CheckoutPage />\n        </Elements>\n    )\n}","import { FormControl, FormHelperText, Typography } from '@material-ui/core'\nimport { UploadFile } from '@material-ui/icons'\nimport { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { UseControllerProps, useController } from 'react-hook-form'\n\ninterface Props extends UseControllerProps { }\n\nexport default function MyDropzone(props: Props) {\n\n    const { fieldState, field } = useController({ ...props, defaultValue: null })\n\n    const dzStyles = {\n        display: 'flex',\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        alignItems: 'center',\n        height: 200,\n        width: 500\n    }\n\n    const dzActiveStyle = {\n        borderColor: 'green'\n    }\n\n    const onDrop = useCallback((acceptedFiles: any) => {\n        acceptedFiles[0] = Object.assign(acceptedFiles[0], { preview: URL.createObjectURL(acceptedFiles[0]) })\n        field.onChange(acceptedFiles[0])\n    }, [field])\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()}>\n            <FormControl style={isDragActive ? { ...dzStyles, ...dzActiveStyle } : dzStyles} error={!!fieldState.error}>\n                <input {...getInputProps} />\n                <UploadFile sx={{ fontSize: '100px' }} />\n                <Typography variant='h4'>\n                    Drop Image Here\n                </Typography>\n                <FormHelperText>{fieldState.error?.message}</FormHelperText>\n            </FormControl>\n        </div>\n    )\n}","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from \"@material-ui/core\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    items: string[]\n}\n\nexport default function AppSelectList(props: Props) {\n\n    const { fieldState, field } = useController({ ...props, defaultValue: '' })\n\n    return (\n        <FormControl fullWidth error={!!fieldState.error}>\n            <InputLabel >{props.label}</InputLabel>\n            <Select\n                value={field.value}\n                label={props.label}\n                onChange={field.onChange}\n            >\n                {props.items.map((item, index) => {\n                    return (<MenuItem key={index} value={item}>{item}</MenuItem>)\n                })}\n\n            </Select>\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\n        </FormControl>\n    )\n}","import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n    name: yup.string().required(),\n    brand: yup.string().required(),\n    type: yup.string().required(),\n    price: yup.number().required().moreThan(100),\n    quantityInStock: yup.number().required().min(0),\n    description: yup.string().required(),\n    file: yup.mixed().when('pictureUrl', {\n        is: (value: string) => !value,\n        then: yup.mixed().required('Please provide an image')\n    })\n})","import { Typography, Grid, Paper, Box, Button } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { FieldValues, useForm } from \"react-hook-form\";\nimport AppDropzone from \"../../app/components/AppDropzone\";\nimport AppSelectList from \"../../app/components/AppSelectList\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\nimport useProducts from \"../../app/hooks/useProducts\";\nimport { Product } from \"../../app/models/product\";\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { validationSchema } from \"./productValidation\";\nimport agent from \"../../app/api/agent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setProduct } from \"../catalog/catalogSlice\";\nimport { LoadingButton } from \"@material-ui/lab\";\n\n\ninterface Props {\n    product?: Product;\n    cancelEdit: () => void;\n}\n\nexport default function ProductForm({ product, cancelEdit }: Props) {\n    const { control, reset, handleSubmit, watch, formState: { isDirty, isSubmitting } } = useForm({\n        mode: 'all',\n        resolver: yupResolver<any>(validationSchema)\n    });\n    const { brands, types } = useProducts();\n    const watchFile = watch('file', null);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (product && !watchFile && !isDirty) reset(product);\n        return () => {\n            if (watchFile) URL.revokeObjectURL(watchFile.preview);\n        }\n    }, [product, reset, watchFile, isDirty]);\n\n    async function handleSubmitData(data: FieldValues) {\n        console.log('atempting handle submit')\n        console.log(data)\n        try {\n            let response: Product;\n            if (product) {\n                response = await agent.Admin.updateProduct(data);\n            } else {\n                response = await agent.Admin.createProduct(data);\n            }\n            dispatch(setProduct(response));\n            cancelEdit();\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <Box component={Paper} sx={{ p: 4 }}>\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\n                Product Details\n            </Typography>\n            <form onSubmit={handleSubmit(handleSubmitData)}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={12}>\n                        <AppTextInput control={control} name='name' label='Product name' />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <AppSelectList items={brands} control={control} name='brand' label='Brand' />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <AppSelectList items={types} control={control} name='type' label='Type' />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <AppTextInput type='number' control={control} name='price' label='Price' />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <AppTextInput type='number' control={control} name='quantityInStock' label='Quantity in Stock' />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <AppTextInput multiline={true} rows={4} control={control} name='description' label='Description' />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Box display='flex' justifyContent='space-between' alignItems='center'>\n                            <AppDropzone control={control} name='file' />\n                            {watchFile ? (\n                                <img src={watchFile.preview} alt='preview' style={{ maxHeight: 200 }} />\n                            ) : (\n                                <img src={product?.pictureUrl} alt={product?.name} style={{ maxHeight: 200 }} />\n                            )}\n                        </Box>\n\n                    </Grid>\n                </Grid>\n                <Box display='flex' justifyContent='space-between' sx={{ mt: 3 }}>\n                    <Button onClick={cancelEdit} variant='contained' color='inherit'>Cancel</Button>\n                    <LoadingButton loading={isSubmitting} type='submit' variant='contained' color='success'>Submit</LoadingButton>\n                </Box>\n            </form>\n        </Box>\n    )\n}","import { Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@material-ui/core\";\nimport { Edit, Delete, TransgenderTwoTone } from \"@material-ui/icons\";\nimport { LoadingButton } from \"@material-ui/lab\";\n\nimport { useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport useProducts from \"../../app/hooks/useProducts\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\nimport ProductForm from \"./ProductForm\";\n\n\n\nexport default function Inventory() {\n\n    const { products, metaData } = useProducts()\n    const dispatch = useAppDispatch()\n\n    const [editMode, setEditMode] = useState(false)\n    const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(undefined)\n    const [loading, setLoading] = useState(false)\n    const [target, setTarget] = useState(0)\n\n    const handleSelecteProduct = (product: Product) => {\n        setSelectedProduct(product)\n        setEditMode(true)\n    }\n\n    const handleDeleteProduct = (id: number) => {\n        setLoading(true)\n        setTarget(id)\n        agent.Admin.deleteProduct(id)\n            .then(() => dispatch(removeProduct(id)))\n            .catch(error => console.log(error))\n        setLoading(false)\n    }\n\n    const cancelEdit = () => {\n        if (selectedProduct) {\n            setSelectedProduct(undefined)\n        }\n        setEditMode(false)\n    }\n\n    if (editMode) return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\n\n    if (!metaData) {\n        return (\n            <LoadingComponent message=\"Loading the Inventory page\" />\n        )\n    }\n\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} variant='h4'>Inventory</Typography>\n                <Button sx={{ m: 2 }} size='large' variant='contained' onClick={() => setEditMode(true)}>Create</Button>\n            </Box>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>#</TableCell>\n                            <TableCell align=\"left\">Product</TableCell>\n                            <TableCell align=\"right\">Price</TableCell>\n                            <TableCell align=\"center\">Type</TableCell>\n                            <TableCell align=\"center\">Brand</TableCell>\n                            <TableCell align=\"center\">Quantity</TableCell>\n                            <TableCell align=\"right\"></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {products.map((product) => (\n                            <TableRow\n                                key={product.id}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {product.id}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    <Box display='flex' alignItems='center'>\n                                        <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\n                                        <span>{product.name}</span>\n                                    </Box>\n                                </TableCell>\n                                <TableCell align=\"right\">{currencyFormat(product.price)}</TableCell>\n                                <TableCell align=\"center\">{product.type}</TableCell>\n                                <TableCell align=\"center\">{product.brand}</TableCell>\n                                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\n                                <TableCell align=\"right\">\n                                    <Button onClick={() => handleSelecteProduct(product)} startIcon={<Edit />} />\n                                    <LoadingButton\n                                        loading={loading && target === product.id}\n                                        startIcon={<Delete />}\n                                        color='error'\n                                        onClick={() => handleDeleteProduct(product.id)}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {metaData &&\n                <Box sx={{ pt: 2 }}>\n                    <AppPagination\n                        metaData={metaData}\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\n                    />\n                </Box>\n            }\n        </>\n    )\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport './styles.css';\nimport Header from './Header';\nimport { Container, createTheme, CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/system';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport Catalog from '../../features/catalog/Catalog';\nimport ProductDetails from '../../features/catalog/ProductDetails';\nimport AboutPage from '../../features/about/AboutPage';\nimport ContactPage from '../../features/contact/ContactPage';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport ServerError from '../errors/ServerError';\nimport NotFound from '../errors/NotFound';\nimport BasketPage from '../../features/basket/BasketPage';\nimport LoadingComponent from './LoadingComponent';\nimport { useAppDispatch } from '../store/configureStore';\nimport { fetchBasketAsync } from '../../features/basket/basketSlice';\nimport Login from '../../features/account/Login';\nimport Register from '../../features/account/Register';\nimport { fetchCurrentUser } from '../../features/account/accountSlice';\nimport PrivateRoute from './PrivateRoute';\n\nimport Orders from '../../features/orders/Orders';\nimport CheckoutWrapper from '../../features/checkout/CheckoutWrapper';\nimport Inventory from '../../features/admin/Inventory';\n\n\n\n\n\nfunction App() {\n\n  const dispatch = useAppDispatch()\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser())\n      await dispatch(fetchBasketAsync())\n    } catch (error: any) {\n      console.log(error)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false))\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false)\n  const paletteType = darkMode ? 'dark' : 'light'\n  const handleToggleDarkMode = () => {\n    setDarkMode(!darkMode)\n  }\n\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\n      }\n    }\n  })\n\n  if (loading) return <LoadingComponent message=\"Loading App...\" />\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <CssBaseline />\n      <Header handleToggleDarkMode={handleToggleDarkMode} />\n      <Route path='/' exact component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{ mt: 4 }}>\n          <Switch>\n            <Route path='/catalog' exact component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/Contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <PrivateRoute roles={['Admin']} path='/inventory' component={Inventory} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      )} />\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext, PropsWithChildren, useContext, useState } from \"react\";\nimport { Basket } from \"../models/baskets\";\n\ninterface StoreContextValue {\n    basket: Basket | null;\n    setBasket: (basket: Basket) => void;\n    removeItem: (productId: number, quantity: number) => void;\n\n}\n\nexport const StoreContext = createContext<StoreContextValue | undefined>(undefined)\n\nexport function useStoreContext() {\n    const context = useContext(StoreContext)\n\n    if (context === undefined) {\n        throw Error(\"Oops, we don't seem to be inside the Provider\")\n    }\n\n    return context\n}\n\nexport function StoreProvider({children}: PropsWithChildren<any>){\n\n    const [basket, setBasket] = useState<Basket | null>(null)\n\n    function removeItem(productId: number, quantity: number) {\n        if (!basket) return;\n\n        const items =[...basket.items]\n        const itemIndex = items.findIndex(i => i.productId === productId)\n\n        if (itemIndex >= 0) {\n            items[itemIndex].quantity -= quantity\n\n            if (items[itemIndex].quantity <= 0) {\n                items.splice(itemIndex, 1)\n            }\n\n            setBasket(prevState => {\n                return {...prevState!, items}\n            })\n        }\n    }\n\n    return (\n        <StoreContext.Provider value={{basket, setBasket, removeItem}}>\n            {children}\n        </StoreContext.Provider>\n    )\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport './index.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserHistory } from 'history'\nimport { StoreProvider } from './app/context/StoreContext';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css'\n\n\nexport const history = createBrowserHistory()\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <StoreProvider>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </StoreProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}